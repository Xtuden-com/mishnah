namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://www.isocat.org/ns/dcr"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
default namespace tei = "http://www.tei-c.org/ns/1.0"
namespace teix = "http://www.tei-c.org/ns/Examples"
namespace xi = "http://www.w3.org/2001/XInclude"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2017-08-20T21:19:48Z. .
# TEI Edition: Version 3.0.0. Last updated on
#	29th March 2016, revision 89ba24e
# TEI Edition Location: http://www.tei-c.org/Vault/P5/Version 3.0.0/
#

# This work is copyright Trevor Muñoz and Maryland Institute for Technology in the Humanities and licensed under a Creative Commons Attribution 3.0 Unported License.
mishnahw_macro.paraContent =
  (text
   | mishnahw_model.gLike
   | mishnahw_model.phrase
   | mishnahw_model.inter
   | mishnahw_model.global
   | mishnahw_lg
   | mishnahw_model.lLike)*
mishnahw_macro.limitedContent =
  (text | mishnahw_model.limitedPhrase | mishnahw_model.inter)*
mishnahw_macro.phraseSeq =
  (text
   | mishnahw_model.gLike
   | mishnahw_model.phrase
   | mishnahw_model.global)*
mishnahw_macro.phraseSeq.limited =
  (text | mishnahw_model.limitedPhrase | mishnahw_model.global)*
mishnahw_macro.specialPara =
  (text
   | mishnahw_model.gLike
   | mishnahw_model.phrase
   | mishnahw_model.inter
   | mishnahw_model.divPart
   | mishnahw_model.global)*
mishnahw_macro.xtext = (text | mishnahw_model.gLike)*
mishnahw_macro.anyXML =
  element * - (tei:* | teix:egXML) {
    attribute * { text }*,
    (text | mishnahw_macro.anyXML)*
  }
mishnahw_data.count = xsd:nonNegativeInteger
mishnahw_data.pointer = xsd:anyURI
mishnahw_att.ascribed.attributes = mishnahw_att.ascribed.attribute.who
mishnahw_att.ascribed.attribute.who =
  
  ## indicates the person, or group of people, to whom the element content is ascribed.
  attribute who {
    list { xsd:anyURI+ }
  }?
mishnahw_att.canonical.attributes =
  mishnahw_att.canonical.attribute.key,
  mishnahw_att.canonical.attribute.ref
mishnahw_att.canonical.attribute.key =
  
  ## provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.
  attribute key { xsd:string }?
mishnahw_att.canonical.attribute.ref =
  
  ## (reference) provides an explicit means of locating a full definition or identity for the entity being named by means of one or more URIs.
  attribute ref {
    list { xsd:anyURI+ }
  }?
mishnahw_att.ranging.attributes =
  mishnahw_att.ranging.attribute.atLeast,
  mishnahw_att.ranging.attribute.atMost,
  mishnahw_att.ranging.attribute.min,
  mishnahw_att.ranging.attribute.max,
  mishnahw_att.ranging.attribute.confidence
mishnahw_att.ranging.attribute.atLeast =
  
  ## gives a minimum estimated value for the approximate measurement.
  attribute atLeast {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
mishnahw_att.ranging.attribute.atMost =
  
  ## gives a maximum estimated value for the approximate measurement.
  attribute atMost {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
mishnahw_att.ranging.attribute.min =
  
  ## where the measurement summarizes more than one observation or a range, supplies the minimum value observed.
  attribute min {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
mishnahw_att.ranging.attribute.max =
  
  ## where the measurement summarizes more than one observation or a range, supplies the maximum value observed.
  attribute max {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
mishnahw_att.ranging.attribute.confidence =
  
  ## specifies the degree of statistical confidence (between zero and one) that a value falls within the range specified by min and max, or the proportion of observed values that fall within that range.
  attribute confidence { xsd:double }?
mishnahw_att.dimensions.attributes =
  mishnahw_att.ranging.attributes,
  mishnahw_att.dimensions.attribute.unit,
  mishnahw_att.dimensions.attribute.quantity,
  mishnahw_att.dimensions.attribute.extent,
  mishnahw_att.dimensions.attribute.precision,
  mishnahw_att.dimensions.attribute.scope
mishnahw_att.dimensions.attribute.unit =
  
  ## names the unit used for the measurement
  ## Suggested values include: 1] cm(centimetres) ; 2] mm(millimetres) ; 3] in(inches) ; 4] lines; 5] chars(characters) 
  attribute unit {
    
    ## (centimetres) 
    "cm"
    | 
      ## (millimetres) 
      "mm"
    | 
      ## (inches) 
      "in"
    | 
      ## lines of text
      "lines"
    | 
      ## (characters) characters of text
      "chars"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
mishnahw_att.dimensions.attribute.quantity =
  
  ## specifies the length in the units specified
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
mishnahw_att.dimensions.attribute.extent =
  
  ## indicates the size of the object concerned using a project-specific vocabulary combining quantity and units in a single string of words.
  attribute extent { xsd:string }?
mishnahw_att.dimensions.attribute.precision =
  
  ## characterizes the precision of the values specified by the other attributes.
  attribute precision {
    
    ##
    "high"
    | 
      ##
      "medium"
    | 
      ##
      "low"
    | 
      ##
      "unknown"
  }?
mishnahw_att.dimensions.attribute.scope =
  
  ## where the measurement summarizes more than one observation, specifies the applicability of this measurement.
  ## Sample values include: 1] all; 2] most; 3] range
  attribute scope {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
mishnahw_att.written.attributes = mishnahw_att.written.attribute.hand
mishnahw_att.written.attribute.hand =
  
  ## points to a handNote element describing the hand considered responsible for the textual content of the element concerned.
  attribute hand { xsd:anyURI }?
mishnahw_att.damaged.attributes =
  mishnahw_att.dimensions.attributes,
  mishnahw_att.written.attributes,
  mishnahw_att.damaged.attribute.agent,
  mishnahw_att.damaged.attribute.degree,
  mishnahw_att.damaged.attribute.group
mishnahw_att.damaged.attribute.agent =
  
  ## categorizes the cause of the damage, if it can be identified.
  ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
  attribute agent {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
mishnahw_att.damaged.attribute.degree =
  
  ## provides a coded representation of the degree of damage, either as a number between 0 (undamaged) and 1 (very extensively damaged), or as one of the codes high, medium, low, or unknown. The damage element with the degree attribute should only be used where the text may be read with some confidence; text supplied from other sources should be tagged as supplied.
  attribute degree {
    xsd:double
    | (
       ##
       "high"
       | 
         ##
         "medium"
       | 
         ##
         "low"
       | 
         ##
         "unknown")
  }?
mishnahw_att.damaged.attribute.group =
  
  ## assigns an arbitrary number to each stretch of damage regarded as forming part of the same physical phenomenon.
  attribute group { xsd:nonNegativeInteger }?
mishnahw_att.breaking.attributes = mishnahw_att.breaking.attribute.break
mishnahw_att.breaking.attribute.break =
  
  ## indicates whether or not the element bearing this attribute should be considered to mark the end of an orthographic token in the same way as whitespace.
  attribute break {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
mishnahw_att.cReferencing.attributes =
  mishnahw_att.cReferencing.attribute.cRef
mishnahw_att.cReferencing.attribute.cRef =
  
  ## (canonical reference) specifies the destination of the pointer by supplying a canonical reference expressed using the scheme defined in a refsDecl element in the TEI header
  attribute cRef { xsd:string }?
mishnahw_att.datable.w3c.attributes =
  mishnahw_att.datable.w3c.attribute.when,
  mishnahw_att.datable.w3c.attribute.notBefore,
  mishnahw_att.datable.w3c.attribute.notAfter,
  mishnahw_att.datable.w3c.attribute.from,
  mishnahw_att.datable.w3c.attribute.to
mishnahw_att.datable.w3c.attribute.when =
  
  ## supplies the value of the date or time in a standard form, e.g. yyyy-mm-dd.
  attribute when {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
mishnahw_att.datable.w3c.attribute.notBefore =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
mishnahw_att.datable.w3c.attribute.notAfter =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
mishnahw_att.datable.w3c.attribute.from =
  
  ## indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.
  attribute from {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
mishnahw_att.datable.w3c.attribute.to =
  
  ## indicates the ending point of the period in standard form, e.g. yyyy-mm-dd.
  attribute to {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
sch:pattern [
  id =
    "digital_mishnah_witness-att.datable.w3c-att-datable-w3c-when-constraint-1"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@when]"
    "\x{a}" ~
    "        "
    sch:report [
      test = "@notBefore|@notAfter|@from|@to"
      role = "nonfatal"
      "The @when attribute cannot be used with any other att.datable.w3c attributes."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id =
    "digital_mishnah_witness-att.datable.w3c-att-datable-w3c-from-constraint-2"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@from]"
    "\x{a}" ~
    "        "
    sch:report [
      test = "@notBefore"
      role = "nonfatal"
      "The @from and @notBefore attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id =
    "digital_mishnah_witness-att.datable.w3c-att-datable-w3c-to-constraint-3"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@to]"
    "\x{a}" ~
    "        "
    sch:report [
      test = "@notAfter"
      role = "nonfatal"
      "The @to and @notAfter attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
mishnahw_att.datable.attributes =
  mishnahw_att.datable.w3c.attributes,
  mishnahw_att.datable.iso.attributes,
  mishnahw_att.datable.custom.attributes,
  mishnahw_att.datable.attribute.calendar,
  mishnahw_att.datable.attribute.period
mishnahw_att.datable.attribute.calendar =
  
  ## indicates the system or calendar to which the date represented by the content of this element belongs.
  attribute calendar { xsd:anyURI }?
sch:pattern [
  id =
    "digital_mishnah_witness-att.datable-calendar-calendar-constraint-4"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@calendar]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "string-length(.) gt 0"
      "\x{a}" ~
      "@calendar indicates the system or calendar to which the date represented by the content of this element\x{a}" ~
      "belongs, but this "
      sch:name [ ]
      " element has no textual content."
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
mishnahw_att.datable.attribute.period =
  
  ## supplies a pointer to some location defining a named period of time within which the datable item is understood to have occurred.
  attribute period { xsd:anyURI }?
mishnahw_att.datcat.attributes =
  mishnahw_att.datcat.attribute.datcat,
  mishnahw_att.datcat.attribute.valueDatcat
mishnahw_att.datcat.attribute.datcat =
  
  ## contains a PID (persistent identifier) that aligns the given element with the appropriate Data Category (or categories) in ISOcat.
  attribute ns1:datcat {
    list { xsd:anyURI+ }
  }?
mishnahw_att.datcat.attribute.valueDatcat =
  
  ## contains a PID (persistent identifier) that aligns the content of the given element or the value of the given attribute with the appropriate simple Data Category (or categories) in ISOcat.
  attribute ns1:valueDatcat {
    list { xsd:anyURI+ }
  }?
mishnahw_att.declarable.attributes =
  mishnahw_att.declarable.attribute.default
mishnahw_att.declarable.attribute.default =
  
  ## indicates whether or not this element is selected by default when its parent is selected.
  [ a:defaultValue = "false" ]
  attribute default {
    
    ## This element is selected if its parent is selected
    "true"
    | 
      ## This element can only be selected explicitly, unless it is the only one of its kind, in which case it is selected if its parent is selected.
      "false"
  }?
mishnahw_att.declaring.attributes =
  mishnahw_att.declaring.attribute.decls
mishnahw_att.declaring.attribute.decls =
  
  ## identifies one or more declarable elements within the header, which are understood to apply to the element bearing this attribute and its content.
  attribute decls {
    list { xsd:anyURI+ }
  }?
mishnahw_att.fragmentable.attributes =
  mishnahw_att.fragmentable.attribute.part
mishnahw_att.fragmentable.attribute.part =
  
  ## specifies whether or not its parent element is fragmented in some way, typically by some other overlapping structure: for example a speech which is divided between two or more verse stanzas, a paragraph which is split across a page division, a verse line which is divided between two speakers.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the element is fragmented in some (unspecified) respect
    "Y"
    | 
      ## (no) the element is not fragmented, or no claim is made as to its completeness
      "N"
    | 
      ## (initial) this is the initial part of a fragmented element
      "I"
    | 
      ## (medial) this is a medial part of a fragmented element
      "M"
    | 
      ## (final) this is the final part of a fragmented element
      "F"
  }?
mishnahw_att.divLike.attributes =
  mishnahw_att.fragmentable.attributes,
  mishnahw_att.divLike.attribute.org,
  mishnahw_att.divLike.attribute.sample
mishnahw_att.divLike.attribute.org =
  
  ## (organization) specifies how the content of the division is organized.
  [ a:defaultValue = "uniform" ]
  attribute org {
    
    ## no claim is made about the sequence in which the immediate contents of this division are to be processed, or their inter-relationships.
    "composite"
    | 
      ## the immediate contents of this element are regarded as forming a logical unit, to be processed in sequence.
      "uniform"
  }?
mishnahw_att.divLike.attribute.sample =
  
  ## indicates whether this division is a sample of the original source and if so, from which part.
  [ a:defaultValue = "complete" ]
  attribute sample {
    
    ## division lacks material present at end in source.
    "initial"
    | 
      ## division lacks material at start and end.
      "medial"
    | 
      ## division lacks material at start.
      "final"
    | 
      ## position of sampled material within original unknown.
      "unknown"
    | 
      ## division is not a sample.
      "complete"
  }?
mishnahw_att.docStatus.attributes =
  mishnahw_att.docStatus.attribute.status
mishnahw_att.docStatus.attribute.status =
  
  ## describes the status of a document either currently or, when associated with a dated element, at the time indicated.
  ## Sample values include: 1] approved; 2] candidate; 3] cleared; 4] deprecated; 5] draft; 6] embargoed; 7] expired; 8] frozen; 9] galley; 10] proposed; 11] published; 12] recommendation; 13] submitted; 14] unfinished; 15] withdrawn
  [ a:defaultValue = "draft" ]
  attribute status {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
mishnahw_att.global.responsibility.attributes =
  mishnahw_att.global.responsibility.attribute.cert,
  mishnahw_att.global.responsibility.attribute.resp
mishnahw_att.global.responsibility.attribute.cert =
  
  ## (certainty) signifies the degree of certainty associated with the intervention or interpretation.
  attribute cert {
    xsd:double
    | (
       ##
       "high"
       | 
         ##
         "medium"
       | 
         ##
         "low"
       | 
         ##
         "unknown")
  }?
mishnahw_att.global.responsibility.attribute.resp =
  
  ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
  attribute resp {
    list { xsd:anyURI+ }
  }?
mishnahw_att.editLike.attributes =
  mishnahw_att.dimensions.attributes,
  mishnahw_att.source.attributes,
  mishnahw_att.editLike.attribute.evidence,
  mishnahw_att.editLike.attribute.instant
mishnahw_att.editLike.attribute.evidence =
  
  ## indicates the nature of the evidence supporting the reliability or accuracy of the intervention or interpretation.
  ## Suggested values include: 1] internal; 2] external; 3] conjecture
  attribute evidence {
    list {
      (
       ## there is internal evidence to support the intervention.
       "internal"
       | 
         ## there is external evidence to support the intervention.
         "external"
       | 
         ## the intervention or interpretation has been made by the editor, cataloguer, or scholar on the basis of their expertise.
         "conjecture"
       | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
    }
  }?
mishnahw_att.editLike.attribute.instant =
  
  ## indicates whether this is an instant revision or not.
  [ a:defaultValue = "false" ]
  attribute instant {
    xsd:boolean
    | (
       ##
       "unknown"
       | 
         ##
         "inapplicable")
  }?
mishnahw_att.global.rendition.attributes =
  mishnahw_att.global.rendition.attribute.rend,
  mishnahw_att.global.rendition.attribute.style,
  mishnahw_att.global.rendition.attribute.rendition
mishnahw_att.global.rendition.attribute.rend =
  
  ## (rendition) indicates how the element in question was rendered or presented in the source text.
  attribute rend {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
mishnahw_att.global.rendition.attribute.style =
  
  ## contains an expression in some formal style definition language which defines the rendering or presentation used for this element in the source text
  attribute style { xsd:string }?
mishnahw_att.global.rendition.attribute.rendition =
  
  ## points to a description of the rendering or presentation used for this element in the source text.
  attribute rendition {
    list { xsd:anyURI+ }
  }?
mishnahw_att.global.attributes =
  mishnahw_att.global.rendition.attributes,
  mishnahw_att.global.linking.attributes,
  mishnahw_att.global.facs.attributes,
  mishnahw_att.global.change.attributes,
  mishnahw_att.global.responsibility.attributes,
  mishnahw_att.global.attribute.xmlid,
  mishnahw_att.global.attribute.n,
  mishnahw_att.global.attribute.xmllang,
  mishnahw_att.global.attribute.xmlbase,
  mishnahw_att.global.attribute.xmlspace
mishnahw_att.global.attribute.xmlid =
  
  ## (identifier) provides a unique identifier for the element bearing the attribute.
  attribute xml:id { xsd:ID }?
mishnahw_att.global.attribute.n =
  
  ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
  attribute n { xsd:string }?
mishnahw_att.global.attribute.xmllang =
  
  ## (language) indicates the language of the element content using a tag generated according to BCP 47.
  attribute xml:lang {
    xsd:language
    | (
       ##
       "")
  }?
mishnahw_att.global.attribute.xmlbase =
  
  ## provides a base URI reference with which applications can resolve relative URI references into absolute URI references.
  attribute xml:base { xsd:anyURI }?
mishnahw_att.global.attribute.xmlspace =
  
  ## signals an intention about how white space should be managed by applications.
  attribute xml:space {
    
    ## signals that the application's default white-space processing modes are acceptable
    "default"
    | 
      ## indicates the intent that applications preserve all white space
      "preserve"
  }?
mishnahw_att.handFeatures.attributes =
  mishnahw_att.handFeatures.attribute.scribe,
  mishnahw_att.handFeatures.attribute.scribeRef,
  mishnahw_att.handFeatures.attribute.script,
  mishnahw_att.handFeatures.attribute.scriptRef,
  mishnahw_att.handFeatures.attribute.medium,
  mishnahw_att.handFeatures.attribute.scope
mishnahw_att.handFeatures.attribute.scribe =
  
  ## gives a name or other identifier for the scribe believed to be responsible for this hand.
  attribute scribe { xsd:Name }?
mishnahw_att.handFeatures.attribute.scribeRef =
  
  ## points to a full description of the scribe concerned, typically supplied by a person element elsewhere in the description.
  attribute scribeRef {
    list { xsd:anyURI+ }
  }?
mishnahw_att.handFeatures.attribute.script =
  
  ## characterizes the particular script or writing style used by this hand, for example secretary, copperplate, Chancery, Italian, etc.
  attribute script {
    list { xsd:Name+ }
  }?
mishnahw_att.handFeatures.attribute.scriptRef =
  
  ## points to a full description of the script or writing style used by this hand, typically supplied by a scriptNote element elsewhere in the description.
  attribute scriptRef {
    list { xsd:anyURI+ }
  }?
mishnahw_att.handFeatures.attribute.medium =
  
  ## describes the tint or type of ink, e.g. brown, or other writing medium, e.g. pencil
  attribute medium {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
mishnahw_att.handFeatures.attribute.scope =
  
  ## specifies how widely this hand is used in the manuscript.
  attribute scope {
    
    ## only this hand is used throughout the manuscript
    "sole"
    | 
      ## this hand is used through most of the manuscript
      "major"
    | 
      ## this hand is used occasionally in the manuscript
      "minor"
  }?
mishnahw_att.internetMedia.attributes =
  mishnahw_att.internetMedia.attribute.mimeType
mishnahw_att.internetMedia.attribute.mimeType =
  
  ## (MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type
  attribute mimeType {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
mishnahw_att.media.attributes =
  mishnahw_att.internetMedia.attributes,
  mishnahw_att.media.attribute.width,
  mishnahw_att.media.attribute.height,
  mishnahw_att.media.attribute.scale
mishnahw_att.media.attribute.width =
  
  ## Where the media are displayed, indicates the display width
  attribute width {
    xsd:token {
      pattern =
        "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)"
    }
  }?
mishnahw_att.media.attribute.height =
  
  ## Where the media are displayed, indicates the display height
  attribute height {
    xsd:token {
      pattern =
        "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)"
    }
  }?
mishnahw_att.media.attribute.scale =
  
  ## Where the media are displayed, indicates a scale factor to be applied when generating the desired display size
  attribute scale {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
mishnahw_att.resourced.attributes = mishnahw_att.resourced.attribute.url
mishnahw_att.resourced.attribute.url =
  
  ## (uniform resource locator) specifies the URL from which the media concerned may be obtained.
  attribute url { xsd:anyURI }
mishnahw_att.measurement.attributes =
  mishnahw_att.measurement.attribute.unit,
  mishnahw_att.measurement.attribute.quantity,
  mishnahw_att.measurement.attribute.commodity
mishnahw_att.measurement.attribute.unit =
  
  ## indicates the units used for the measurement, usually using the standard symbol for the desired units.
  ## Suggested values include: 1] m(metre) ; 2] kg(kilogram) ; 3] s(second) ; 4] Hz(hertz) ; 5] Pa(pascal) ; 6] Ω(ohm) ; 7] L(litre) ; 8] t(tonne) ; 9] ha(hectare) ; 10] Å(ångström) ; 11] mL(millilitre) ; 12] cm(centimetre) ; 13] dB(decibel) ; 14] kbit(kilobit) ; 15] Kibit(kibibit) ; 16] kB(kilobyte) ; 17] KiB(kibibyte) ; 18] MB(megabyte) ; 19] MiB(mebibyte) 
  attribute unit {
    
    ## (metre) SI base unit of length
    "m"
    | 
      ## (kilogram) SI base unit of mass
      "kg"
    | 
      ## (second) SI base unit of time
      "s"
    | 
      ## (hertz) SI unit of frequency
      "Hz"
    | 
      ## (pascal) SI unit of pressure or stress
      "Pa"
    | 
      ## (ohm) SI unit of electric resistance
      "Ω"
    | 
      ## (litre) 1 dm³
      "L"
    | 
      ## (tonne) 10³ kg
      "t"
    | 
      ## (hectare) 1 hm²
      "ha"
    | 
      ## (ångström) 10⁻¹⁰ m
      "Å"
    | 
      ## (millilitre) 
      "mL"
    | 
      ## (centimetre) 
      "cm"
    | 
      ## (decibel) see remarks, below
      "dB"
    | 
      ## (kilobit) 10³ or 1000 bits
      "kbit"
    | 
      ## (kibibit) 2¹⁰ or 1024 bits
      "Kibit"
    | 
      ## (kilobyte) 10³ or 1000 bytes
      "kB"
    | 
      ## (kibibyte) 2¹⁰ or 1024 bytes
      "KiB"
    | 
      ## (megabyte) 10⁶ or 1 000 000 bytes
      "MB"
    | 
      ## (mebibyte) 2²⁰ or 1 048 576 bytes
      "MiB"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
mishnahw_att.measurement.attribute.quantity =
  
  ## specifies the number of the specified units that comprise the measurement
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
mishnahw_att.measurement.attribute.commodity =
  
  ## indicates the substance that is being measured
  attribute commodity {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
mishnahw_att.naming.attributes =
  mishnahw_att.canonical.attributes,
  mishnahw_att.naming.attribute.role,
  mishnahw_att.naming.attribute.nymRef
mishnahw_att.naming.attribute.role =
  
  ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
  attribute role {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
mishnahw_att.naming.attribute.nymRef =
  
  ## (reference to the canonical name) provides a means of locating the canonical form (nym) of the names associated with the object named by the element bearing it.
  attribute nymRef {
    list { xsd:anyURI+ }
  }?
mishnahw_att.placement.attributes =
  mishnahw_att.placement.attribute.place
mishnahw_att.placement.attribute.place =
  
  ## specifies where this item is placed.
  ## Suggested values include: 1] below; 2] bottom; 3] margin; 4] top; 5] opposite; 6] overleaf; 7] above; 8] end; 9] inline; 10] inspace
  attribute place {
    list {
      (
       ## below the line
       "below"
       | 
         ## at the foot of the page
         "bottom"
       | 
         ## in the margin (left, right, or both)
         "margin"
       | 
         ## at the top of the page
         "top"
       | 
         ## on the opposite, i.e. facing, page
         "opposite"
       | 
         ## on the other side of the leaf
         "overleaf"
       | 
         ## above the line
         "above"
       | 
         ## at the end of e.g. chapter or volume.
         "end"
       | 
         ## within the body of the text.
         "inline"
       | 
         ## in a predefined space, for example left by an earlier scribe.
         "inspace"
       | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
    }
  }?
mishnahw_att.typed.attributes =
  mishnahw_att.typed.attribute.type,
  mishnahw_att.typed.attribute.subtype
mishnahw_att.typed.attribute.type =
  
  ## characterizes the element in some sense, using any convenient classification scheme or typology.
  attribute type {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
mishnahw_att.typed.attribute.subtype =
  
  ## provides a sub-categorization of the element, if needed
  attribute subtype {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
sch:pattern [
  id = "digital_mishnah_witness-att.typed-subtypeTyped-constraint-5"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@subtype]"
    "\x{a}" ~
    "        "
    sch:assert [
      test = "@type"
      "The "
      sch:name [ ]
      " element should not be categorized in detail with @subtype unless also categorized in general with @type"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
mishnahw_att.pointing.attributes =
  mishnahw_att.pointing.attribute.targetLang,
  mishnahw_att.pointing.attribute.target,
  mishnahw_att.pointing.attribute.evaluate
mishnahw_att.pointing.attribute.targetLang =
  
  ## specifies the language of the content to be found at the destination referenced by target, using a language tag generated according to BCP 47.
  attribute targetLang {
    xsd:language
    | (
       ##
       "")
  }?
sch:pattern [
  id =
    "digital_mishnah_witness-att.pointing-targetLang-targetLang-constraint-6"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[not(self::tei:schemaSpec)][@targetLang]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "@target"
      "@targetLang should only be used on "
      sch:name [ ]
      " if @target is specified."
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
mishnahw_att.pointing.attribute.target =
  
  ## specifies the destination of the reference by supplying one or more URI References
  attribute target {
    list { xsd:anyURI+ }
  }?
mishnahw_att.pointing.attribute.evaluate =
  
  ## specifies the intended meaning when the target of a pointer is itself a pointer.
  attribute evaluate {
    
    ## if the element pointed to is itself a pointer, then the target of that pointer will be taken, and so on, until an element is found which is not a pointer.
    "all"
    | 
      ## if the element pointed to is itself a pointer, then its target (whether a pointer or not) is taken as the target of this pointer.
      "one"
    | 
      ## no further evaluation of targets is carried out beyond that needed to find the element specified in the pointer's target.
      "none"
  }?
mishnahw_att.pointing.group.attributes =
  mishnahw_att.pointing.attributes,
  mishnahw_att.typed.attributes,
  mishnahw_att.pointing.group.attribute.domains,
  mishnahw_att.pointing.group.attribute.targFunc
mishnahw_att.pointing.group.attribute.domains =
  
  ## optionally specifies the identifiers of the elements within which all elements indicated by the contents of this element lie.
  attribute domains {
    list { xsd:anyURI, xsd:anyURI, xsd:anyURI* }
  }?
mishnahw_att.pointing.group.attribute.targFunc =
  
  ## (target function) describes the function of each of the values of the target attribute of the enclosed link, join, or alt tags.
  attribute targFunc {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" },
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" },
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }*
    }
  }?
mishnahw_att.segLike.attributes =
  mishnahw_att.datcat.attributes,
  mishnahw_att.fragmentable.attributes,
  mishnahw_att.segLike.attribute.function
mishnahw_att.segLike.attribute.function =
  
  ## characterizes the function of the segment.
  attribute function {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
mishnahw_att.sortable.attributes =
  mishnahw_att.sortable.attribute.sortKey
mishnahw_att.sortable.attribute.sortKey =
  
  ## supplies the sort key for this element in an index, list or group which contains it.
  attribute sortKey {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
mishnahw_att.edition.attributes =
  mishnahw_att.edition.attribute.ed,
  mishnahw_att.edition.attribute.edRef
mishnahw_att.edition.attribute.ed =
  
  ## (edition) supplies a sigil or other arbitrary identifier for the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute ed {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
mishnahw_att.edition.attribute.edRef =
  
  ## (edition reference) provides a pointer to the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute edRef {
    list { xsd:anyURI+ }
  }?
mishnahw_att.spanning.attributes =
  mishnahw_att.spanning.attribute.spanTo
mishnahw_att.spanning.attribute.spanTo =
  
  ## indicates the end of a span initiated by the element bearing this attribute.
  attribute spanTo { xsd:anyURI }?
sch:pattern [
  id =
    "digital_mishnah_witness-att.spanning-spanTo-spanTo-2-constraint-7"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@spanTo]"
    "\x{a}" ~
    "            "
    sch:assert [
      test =
        "id(substring(@spanTo,2)) and following::*[@xml:id=substring(current()/@spanTo,2)]"
      "\x{a}" ~
      "The element indicated by @spanTo ("
      sch:value-of [ select = "@spanTo" ]
      ") must follow the current element "
      sch:name [ ]
      "\x{a}" ~
      "                  "
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
mishnahw_att.styleDef.attributes =
  mishnahw_att.styleDef.attribute.scheme,
  mishnahw_att.styleDef.attribute.schemeVersion
mishnahw_att.styleDef.attribute.scheme =
  
  ## identifies the language used to describe the rendition.
  attribute scheme {
    
    ## Cascading Stylesheet Language
    "css"
    | 
      ## Extensible Stylesheet Language Formatting Objects
      "xslfo"
    | 
      ## Informal free text description
      "free"
    | 
      ## A user-defined rendition description language
      "other"
  }?
mishnahw_att.styleDef.attribute.schemeVersion =
  
  ## supplies a version number for the style language provided in scheme.
  attribute schemeVersion {
    xsd:token { pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}" }
  }?
sch:pattern [
  id =
    "digital_mishnah_witness-att.styleDef-schemeVersion-schemeVersionRequiresScheme-constraint-8"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@schemeVersion]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "@scheme and not(@scheme = 'free')"
      "\x{a}" ~
      "              @schemeVersion can only be used if @scheme is specified.\x{a}" ~
      "            "
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
mishnahw_att.timed.attributes =
  mishnahw_att.timed.attribute.start, mishnahw_att.timed.attribute.end
mishnahw_att.timed.attribute.start =
  
  ## indicates the location within a temporal alignment at which this element begins.
  attribute start { xsd:anyURI }?
mishnahw_att.timed.attribute.end =
  
  ## indicates the location within a temporal alignment at which this element ends.
  attribute end { xsd:anyURI }?
mishnahw_att.transcriptional.attributes =
  mishnahw_att.editLike.attributes,
  mishnahw_att.written.attributes,
  mishnahw_att.transcriptional.attribute.status,
  mishnahw_att.transcriptional.attribute.cause,
  mishnahw_att.transcriptional.attribute.seq
mishnahw_att.transcriptional.attribute.status =
  
  ## indicates the effect of the intervention, for example in the case of a deletion, strikeouts which include too much or too little text, or in the case of an addition, an insertion which duplicates some of the text already present.
  ## Sample values include: 1] duplicate; 2] duplicate-partial; 3] excessStart; 4] excessEnd; 5] shortStart; 6] shortEnd; 7] partial; 8] unremarkable
  [ a:defaultValue = "unremarkable" ]
  attribute status {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
mishnahw_att.transcriptional.attribute.cause =
  
  ## documents the presumed cause for the intervention.
  ## Suggested values include: 1] fix; 2] unclear
  attribute cause {
    
    ## repeated for the purpose of fixation
    "fix"
    | 
      ## repeated to clarify a previously illegible or badly written text or mark
      "unclear"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
mishnahw_att.transcriptional.attribute.seq =
  
  ## (sequence) assigns a sequence number related to the order in which the encoded features carrying this attribute are believed to have occurred.
  attribute seq { xsd:nonNegativeInteger }?
mishnahw_att.translatable.attributes =
  mishnahw_att.translatable.attribute.versionDate
mishnahw_att.translatable.attribute.versionDate =
  
  ## specifies the date on which the source text was extracted and sent to the translator
  attribute versionDate {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
mishnahw_att.citing.attributes =
  mishnahw_att.citing.attribute.unit,
  mishnahw_att.citing.attribute.from,
  mishnahw_att.citing.attribute.to
mishnahw_att.citing.attribute.unit =
  
  ## identifies the unit of information conveyed by the element, e.g. columns, pages, volume.
  ## Suggested values include: 1] volume; 2] issue; 3] page; 4] line; 5] chapter; 6] part; 7] column
  attribute unit {
    
    ## the element contains a volume number.
    "volume"
    | 
      ## the element contains an issue number, or volume and issue numbers.
      "issue"
    | 
      ## the element contains a page number or page range.
      "page"
    | 
      ## the element contains a line number or line range.
      "line"
    | 
      ## the element contains a chapter indication (number and/or title)
      "chapter"
    | 
      ## the element identifies a part of a book or collection.
      "part"
    | 
      ## the element identifies a column.
      "column"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
mishnahw_att.citing.attribute.from =
  
  ## specifies the starting point of the range of units indicated by the unit attribute.
  attribute from {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
mishnahw_att.citing.attribute.to =
  
  ## specifies the end-point of the range of units indicated by the unit attribute.
  attribute to {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
mishnahw_model.nameLike.agent =
  mishnahw_name | mishnahw_orgName | mishnahw_persName
mishnahw_model.nameLike.agent_alternation =
  mishnahw_name | mishnahw_orgName | mishnahw_persName
mishnahw_model.nameLike.agent_sequence =
  mishnahw_name, mishnahw_orgName, mishnahw_persName
mishnahw_model.nameLike.agent_sequenceOptional =
  mishnahw_name?, mishnahw_orgName?, mishnahw_persName?
mishnahw_model.nameLike.agent_sequenceOptionalRepeatable =
  mishnahw_name*, mishnahw_orgName*, mishnahw_persName*
mishnahw_model.nameLike.agent_sequenceRepeatable =
  mishnahw_name+, mishnahw_orgName+, mishnahw_persName+
mishnahw_model.segLike =
  mishnahw_seg | mishnahw_pc | mishnahw_c | mishnahw_w
mishnahw_model.hiLike = mishnahw_hi
mishnahw_model.hiLike_alternation = mishnahw_hi
mishnahw_model.hiLike_sequence = mishnahw_hi
mishnahw_model.hiLike_sequenceOptional = mishnahw_hi?
mishnahw_model.hiLike_sequenceOptionalRepeatable = mishnahw_hi*
mishnahw_model.hiLike_sequenceRepeatable = mishnahw_hi+
mishnahw_model.emphLike =
  mishnahw_foreign
  | mishnahw_emph
  | mishnahw_distinct
  | mishnahw_mentioned
  | mishnahw_soCalled
  | mishnahw_gloss
  | mishnahw_term
  | mishnahw_title
mishnahw_model.emphLike_alternation =
  mishnahw_foreign
  | mishnahw_emph
  | mishnahw_distinct
  | mishnahw_mentioned
  | mishnahw_soCalled
  | mishnahw_gloss
  | mishnahw_term
  | mishnahw_title
mishnahw_model.emphLike_sequence =
  mishnahw_foreign,
  mishnahw_emph,
  mishnahw_distinct,
  mishnahw_mentioned,
  mishnahw_soCalled,
  mishnahw_gloss,
  mishnahw_term,
  mishnahw_title
mishnahw_model.emphLike_sequenceOptional =
  mishnahw_foreign?,
  mishnahw_emph?,
  mishnahw_distinct?,
  mishnahw_mentioned?,
  mishnahw_soCalled?,
  mishnahw_gloss?,
  mishnahw_term?,
  mishnahw_title?
mishnahw_model.emphLike_sequenceOptionalRepeatable =
  mishnahw_foreign*,
  mishnahw_emph*,
  mishnahw_distinct*,
  mishnahw_mentioned*,
  mishnahw_soCalled*,
  mishnahw_gloss*,
  mishnahw_term*,
  mishnahw_title*
mishnahw_model.emphLike_sequenceRepeatable =
  mishnahw_foreign+,
  mishnahw_emph+,
  mishnahw_distinct+,
  mishnahw_mentioned+,
  mishnahw_soCalled+,
  mishnahw_gloss+,
  mishnahw_term+,
  mishnahw_title+
mishnahw_model.highlighted =
  mishnahw_model.hiLike | mishnahw_model.emphLike
mishnahw_model.dateLike = mishnahw_date | mishnahw_time
mishnahw_model.dateLike_alternation = mishnahw_date | mishnahw_time
mishnahw_model.dateLike_sequence = mishnahw_date, mishnahw_time
mishnahw_model.dateLike_sequenceOptional =
  mishnahw_date?, mishnahw_time?
mishnahw_model.dateLike_sequenceOptionalRepeatable =
  mishnahw_date*, mishnahw_time*
mishnahw_model.dateLike_sequenceRepeatable =
  mishnahw_date+, mishnahw_time+
mishnahw_model.dimLike = mishnahw_height | mishnahw_width
mishnahw_model.measureLike =
  mishnahw_num
  | mishnahw_measure
  | mishnahw_measureGrp
  | mishnahw_dim
  | mishnahw_height
  | mishnahw_width
mishnahw_model.measureLike_alternation =
  mishnahw_num
  | mishnahw_measure
  | mishnahw_measureGrp
  | mishnahw_dim
  | mishnahw_height
  | mishnahw_width
mishnahw_model.measureLike_sequence =
  mishnahw_num,
  mishnahw_measure,
  mishnahw_measureGrp,
  mishnahw_dim,
  mishnahw_height,
  mishnahw_width
mishnahw_model.measureLike_sequenceOptional =
  mishnahw_num?,
  mishnahw_measure?,
  mishnahw_measureGrp?,
  mishnahw_dim?,
  mishnahw_height?,
  mishnahw_width?
mishnahw_model.measureLike_sequenceOptionalRepeatable =
  mishnahw_num*,
  mishnahw_measure*,
  mishnahw_measureGrp*,
  mishnahw_dim*,
  mishnahw_height*,
  mishnahw_width*
mishnahw_model.measureLike_sequenceRepeatable =
  mishnahw_num+,
  mishnahw_measure+,
  mishnahw_measureGrp+,
  mishnahw_dim+,
  mishnahw_height+,
  mishnahw_width+
mishnahw_model.egLike = notAllowed
mishnahw_model.egLike_alternation = notAllowed
mishnahw_model.egLike_sequence = empty
mishnahw_model.egLike_sequenceOptional = empty
mishnahw_model.egLike_sequenceOptionalRepeatable = empty
mishnahw_model.egLike_sequenceRepeatable = notAllowed
mishnahw_model.graphicLike =
  mishnahw_media | mishnahw_graphic | mishnahw_binaryObject
mishnahw_model.offsetLike = notAllowed
mishnahw_model.offsetLike_alternation = notAllowed
mishnahw_model.offsetLike_sequence = empty
mishnahw_model.offsetLike_sequenceOptional = empty
mishnahw_model.offsetLike_sequenceOptionalRepeatable = empty
mishnahw_model.offsetLike_sequenceRepeatable = notAllowed
mishnahw_model.pPart.msdesc =
  mishnahw_dimensions | mishnahw_locus | mishnahw_locusGrp
mishnahw_model.pPart.editorial =
  mishnahw_choice
  | mishnahw_abbr
  | mishnahw_expan
  | mishnahw_am
  | mishnahw_subst
mishnahw_model.pPart.editorial_alternation =
  mishnahw_choice
  | mishnahw_abbr
  | mishnahw_expan
  | mishnahw_am
  | mishnahw_subst
mishnahw_model.pPart.editorial_sequence =
  mishnahw_choice,
  mishnahw_abbr,
  mishnahw_expan,
  mishnahw_am,
  mishnahw_subst
mishnahw_model.pPart.editorial_sequenceOptional =
  mishnahw_choice?,
  mishnahw_abbr?,
  mishnahw_expan?,
  mishnahw_am?,
  mishnahw_subst?
mishnahw_model.pPart.editorial_sequenceOptionalRepeatable =
  mishnahw_choice*,
  mishnahw_abbr*,
  mishnahw_expan*,
  mishnahw_am*,
  mishnahw_subst*
mishnahw_model.pPart.editorial_sequenceRepeatable =
  mishnahw_choice+,
  mishnahw_abbr+,
  mishnahw_expan+,
  mishnahw_am+,
  mishnahw_subst+
mishnahw_model.pPart.transcriptional =
  mishnahw_sic
  | mishnahw_corr
  | mishnahw_reg
  | mishnahw_orig
  | mishnahw_add
  | mishnahw_del
  | mishnahw_unclear
  | mishnahw_damage
  | mishnahw_handShift
  | mishnahw_restore
  | mishnahw_supplied
  | mishnahw_surplus
  | mishnahw_secl
  | mishnahw_mod
  | mishnahw_redo
  | mishnahw_retrace
  | mishnahw_undo
mishnahw_model.pPart.transcriptional_alternation =
  mishnahw_sic
  | mishnahw_corr
  | mishnahw_reg
  | mishnahw_orig
  | mishnahw_add
  | mishnahw_del
  | mishnahw_unclear
  | mishnahw_damage
  | mishnahw_handShift
  | mishnahw_restore
  | mishnahw_supplied
  | mishnahw_surplus
  | mishnahw_secl
  | mishnahw_mod
  | mishnahw_redo
  | mishnahw_retrace
  | mishnahw_undo
mishnahw_model.pPart.transcriptional_sequence =
  mishnahw_sic,
  mishnahw_corr,
  mishnahw_reg,
  mishnahw_orig,
  mishnahw_add,
  mishnahw_del,
  mishnahw_unclear,
  mishnahw_damage,
  mishnahw_handShift,
  mishnahw_restore,
  mishnahw_supplied,
  mishnahw_surplus,
  mishnahw_secl,
  mishnahw_mod,
  mishnahw_redo,
  mishnahw_retrace,
  mishnahw_undo
mishnahw_model.pPart.transcriptional_sequenceOptional =
  mishnahw_sic?,
  mishnahw_corr?,
  mishnahw_reg?,
  mishnahw_orig?,
  mishnahw_add?,
  mishnahw_del?,
  mishnahw_unclear?,
  mishnahw_damage?,
  mishnahw_handShift?,
  mishnahw_restore?,
  mishnahw_supplied?,
  mishnahw_surplus?,
  mishnahw_secl?,
  mishnahw_mod?,
  mishnahw_redo?,
  mishnahw_retrace?,
  mishnahw_undo?
mishnahw_model.pPart.transcriptional_sequenceOptionalRepeatable =
  mishnahw_sic*,
  mishnahw_corr*,
  mishnahw_reg*,
  mishnahw_orig*,
  mishnahw_add*,
  mishnahw_del*,
  mishnahw_unclear*,
  mishnahw_damage*,
  mishnahw_handShift*,
  mishnahw_restore*,
  mishnahw_supplied*,
  mishnahw_surplus*,
  mishnahw_secl*,
  mishnahw_mod*,
  mishnahw_redo*,
  mishnahw_retrace*,
  mishnahw_undo*
mishnahw_model.pPart.transcriptional_sequenceRepeatable =
  mishnahw_sic+,
  mishnahw_corr+,
  mishnahw_reg+,
  mishnahw_orig+,
  mishnahw_add+,
  mishnahw_del+,
  mishnahw_unclear+,
  mishnahw_damage+,
  mishnahw_handShift+,
  mishnahw_restore+,
  mishnahw_supplied+,
  mishnahw_surplus+,
  mishnahw_secl+,
  mishnahw_mod+,
  mishnahw_redo+,
  mishnahw_retrace+,
  mishnahw_undo+
mishnahw_model.pPart.edit =
  mishnahw_model.pPart.editorial | mishnahw_model.pPart.transcriptional
mishnahw_model.linePart =
  mishnahw_model.segLike
  | mishnahw_model.hiLike
  | mishnahw_model.pPart.transcriptional
  | mishnahw_choice
  | mishnahw_line
mishnahw_model.ptrLike = mishnahw_ptr | mishnahw_ref
mishnahw_model.lPart = notAllowed
mishnahw_model.global.meta =
  mishnahw_index
  | mishnahw_substJoin
  | mishnahw_listTranspose
  | mishnahw_join
  | mishnahw_joinGrp
mishnahw_model.milestoneLike =
  mishnahw_milestone
  | mishnahw_gb
  | mishnahw_pb
  | mishnahw_lb
  | mishnahw_cb
  | mishnahw_fw
  | mishnahw_anchor
mishnahw_model.gLike = mishnahw_g
mishnahw_model.oddDecl = notAllowed
mishnahw_model.oddDecl_alternation = notAllowed
mishnahw_model.oddDecl_sequence = empty
mishnahw_model.oddDecl_sequenceOptional = empty
mishnahw_model.oddDecl_sequenceOptionalRepeatable = empty
mishnahw_model.oddDecl_sequenceRepeatable = notAllowed
mishnahw_model.phrase.xml = notAllowed
mishnahw_model.specDescLike = notAllowed
mishnahw_model.biblLike =
  mishnahw_bibl
  | mishnahw_biblStruct
  | mishnahw_listBibl
  | mishnahw_biblFull
  | mishnahw_msDesc
mishnahw_model.biblLike_alternation =
  mishnahw_bibl
  | mishnahw_biblStruct
  | mishnahw_listBibl
  | mishnahw_biblFull
  | mishnahw_msDesc
mishnahw_model.biblLike_sequence =
  mishnahw_bibl,
  mishnahw_biblStruct,
  mishnahw_listBibl,
  mishnahw_biblFull,
  mishnahw_msDesc
mishnahw_model.biblLike_sequenceOptional =
  mishnahw_bibl?,
  mishnahw_biblStruct?,
  mishnahw_listBibl?,
  mishnahw_biblFull?,
  mishnahw_msDesc?
mishnahw_model.biblLike_sequenceOptionalRepeatable =
  mishnahw_bibl*,
  mishnahw_biblStruct*,
  mishnahw_listBibl*,
  mishnahw_biblFull*,
  mishnahw_msDesc*
mishnahw_model.biblLike_sequenceRepeatable =
  mishnahw_bibl+,
  mishnahw_biblStruct+,
  mishnahw_listBibl+,
  mishnahw_biblFull+,
  mishnahw_msDesc+
mishnahw_model.headLike = mishnahw_head
mishnahw_model.headLike_alternation = mishnahw_head
mishnahw_model.headLike_sequence = mishnahw_head
mishnahw_model.headLike_sequenceOptional = mishnahw_head?
mishnahw_model.headLike_sequenceOptionalRepeatable = mishnahw_head*
mishnahw_model.headLike_sequenceRepeatable = mishnahw_head+
mishnahw_model.labelLike = mishnahw_desc | mishnahw_label
mishnahw_model.labelLike_alternation = mishnahw_desc | mishnahw_label
mishnahw_model.labelLike_sequence = mishnahw_desc, mishnahw_label
mishnahw_model.labelLike_sequenceOptional =
  mishnahw_desc?, mishnahw_label?
mishnahw_model.labelLike_sequenceOptionalRepeatable =
  mishnahw_desc*, mishnahw_label*
mishnahw_model.labelLike_sequenceRepeatable =
  mishnahw_desc+, mishnahw_label+
mishnahw_model.listLike = mishnahw_list
mishnahw_model.listLike_alternation = mishnahw_list
mishnahw_model.listLike_sequence = mishnahw_list
mishnahw_model.listLike_sequenceOptional = mishnahw_list?
mishnahw_model.listLike_sequenceOptionalRepeatable = mishnahw_list*
mishnahw_model.listLike_sequenceRepeatable = mishnahw_list+
mishnahw_model.noteLike = mishnahw_note
mishnahw_model.lLike = mishnahw_l
mishnahw_model.lLike_alternation = mishnahw_l
mishnahw_model.lLike_sequence = mishnahw_l
mishnahw_model.lLike_sequenceOptional = mishnahw_l?
mishnahw_model.lLike_sequenceOptionalRepeatable = mishnahw_l*
mishnahw_model.lLike_sequenceRepeatable = mishnahw_l+
mishnahw_model.pLike = mishnahw_p | mishnahw_ab
mishnahw_model.pLike_alternation = mishnahw_p | mishnahw_ab
mishnahw_model.pLike_sequence = mishnahw_p, mishnahw_ab
mishnahw_model.pLike_sequenceOptional = mishnahw_p?, mishnahw_ab?
mishnahw_model.pLike_sequenceOptionalRepeatable =
  mishnahw_p*, mishnahw_ab*
mishnahw_model.pLike_sequenceRepeatable = mishnahw_p+, mishnahw_ab+
mishnahw_model.stageLike = mishnahw_stage
mishnahw_model.stageLike_alternation = mishnahw_stage
mishnahw_model.stageLike_sequence = mishnahw_stage
mishnahw_model.stageLike_sequenceOptional = mishnahw_stage?
mishnahw_model.stageLike_sequenceOptionalRepeatable = mishnahw_stage*
mishnahw_model.stageLike_sequenceRepeatable = mishnahw_stage+
mishnahw_model.entryPart = notAllowed
mishnahw_model.global.edit =
  mishnahw_gap | mishnahw_damageSpan | mishnahw_space
mishnahw_model.divPart =
  mishnahw_model.lLike
  | mishnahw_model.pLike
  | mishnahw_lg
  | mishnahw_sp
mishnahw_model.placeNamePart =
  mishnahw_placeName | mishnahw_region | mishnahw_settlement
mishnahw_model.placeNamePart_alternation =
  mishnahw_placeName | mishnahw_region | mishnahw_settlement
mishnahw_model.placeNamePart_sequence =
  mishnahw_placeName, mishnahw_region, mishnahw_settlement
mishnahw_model.placeNamePart_sequenceOptional =
  mishnahw_placeName?, mishnahw_region?, mishnahw_settlement?
mishnahw_model.placeNamePart_sequenceOptionalRepeatable =
  mishnahw_placeName*, mishnahw_region*, mishnahw_settlement*
mishnahw_model.placeNamePart_sequenceRepeatable =
  mishnahw_placeName+, mishnahw_region+, mishnahw_settlement+
mishnahw_model.placeStateLike = mishnahw_model.placeNamePart
mishnahw_model.placeStateLike_alternation =
  mishnahw_model.placeNamePart_alternation
mishnahw_model.placeStateLike_sequence =
  mishnahw_model.placeNamePart_sequence
mishnahw_model.placeStateLike_sequenceOptional =
  mishnahw_model.placeNamePart_sequenceOptional?
mishnahw_model.placeStateLike_sequenceOptionalRepeatable =
  mishnahw_model.placeNamePart_sequenceOptionalRepeatable*
mishnahw_model.placeStateLike_sequenceRepeatable =
  mishnahw_model.placeNamePart_sequenceRepeatable+
mishnahw_model.availabilityPart = mishnahw_licence
mishnahw_model.certLike = notAllowed
mishnahw_model.descLike = mishnahw_desc
mishnahw_model.glossLike = mishnahw_gloss
mishnahw_model.quoteLike = mishnahw_quote | mishnahw_cit
mishnahw_model.quoteLike_alternation = mishnahw_quote | mishnahw_cit
mishnahw_model.quoteLike_sequence = mishnahw_quote, mishnahw_cit
mishnahw_model.quoteLike_sequenceOptional =
  mishnahw_quote?, mishnahw_cit?
mishnahw_model.quoteLike_sequenceOptionalRepeatable =
  mishnahw_quote*, mishnahw_cit*
mishnahw_model.quoteLike_sequenceRepeatable =
  mishnahw_quote+, mishnahw_cit+
mishnahw_model.qLike =
  mishnahw_model.quoteLike
  | mishnahw_said
  | mishnahw_q
  | mishnahw_floatingText
mishnahw_model.qLike_alternation =
  mishnahw_model.quoteLike_alternation
  | mishnahw_said
  | mishnahw_q
  | mishnahw_floatingText
mishnahw_model.qLike_sequence =
  mishnahw_model.quoteLike_sequence,
  mishnahw_said,
  mishnahw_q,
  mishnahw_floatingText
mishnahw_model.qLike_sequenceOptional =
  mishnahw_model.quoteLike_sequenceOptional?,
  mishnahw_said?,
  mishnahw_q?,
  mishnahw_floatingText?
mishnahw_model.qLike_sequenceOptionalRepeatable =
  mishnahw_model.quoteLike_sequenceOptionalRepeatable*,
  mishnahw_said*,
  mishnahw_q*,
  mishnahw_floatingText*
mishnahw_model.qLike_sequenceRepeatable =
  mishnahw_model.quoteLike_sequenceRepeatable+,
  mishnahw_said+,
  mishnahw_q+,
  mishnahw_floatingText+
mishnahw_model.respLike =
  mishnahw_author
  | mishnahw_editor
  | mishnahw_respStmt
  | mishnahw_meeting
  | mishnahw_sponsor
  | mishnahw_funder
  | mishnahw_principal
mishnahw_model.divWrapper =
  mishnahw_meeting
  | mishnahw_byline
  | mishnahw_dateline
  | mishnahw_argument
  | mishnahw_epigraph
  | mishnahw_salute
  | mishnahw_docAuthor
  | mishnahw_docDate
mishnahw_model.divTopPart =
  mishnahw_model.headLike | mishnahw_opener | mishnahw_signed
mishnahw_model.divTop =
  mishnahw_model.divWrapper | mishnahw_model.divTopPart
mishnahw_model.frontPart.drama = notAllowed
mishnahw_model.pLike.front =
  mishnahw_head
  | mishnahw_byline
  | mishnahw_argument
  | mishnahw_epigraph
  | mishnahw_docTitle
  | mishnahw_titlePart
  | mishnahw_docAuthor
  | mishnahw_docEdition
  | mishnahw_docImprint
  | mishnahw_docDate
mishnahw_model.divBottomPart =
  mishnahw_trailer
  | mishnahw_closer
  | mishnahw_signed
  | mishnahw_postscript
mishnahw_model.divBottom =
  mishnahw_model.divWrapper | mishnahw_model.divBottomPart
mishnahw_model.titlepagePart =
  mishnahw_graphic
  | mishnahw_binaryObject
  | mishnahw_byline
  | mishnahw_argument
  | mishnahw_epigraph
  | mishnahw_docTitle
  | mishnahw_titlePart
  | mishnahw_docAuthor
  | mishnahw_imprimatur
  | mishnahw_docEdition
  | mishnahw_docImprint
  | mishnahw_docDate
mishnahw_model.msQuoteLike = mishnahw_title
mishnahw_model.msItemPart =
  mishnahw_model.biblLike
  | mishnahw_model.quoteLike
  | mishnahw_model.respLike
  | mishnahw_model.msQuoteLike
  | mishnahw_textLang
  | mishnahw_idno
  | mishnahw_msItem
mishnahw_model.choicePart =
  mishnahw_sic
  | mishnahw_corr
  | mishnahw_reg
  | mishnahw_orig
  | mishnahw_unclear
  | mishnahw_abbr
  | mishnahw_expan
  | mishnahw_am
  | mishnahw_seg
mishnahw_model.imprintPart =
  mishnahw_publisher | mishnahw_biblScope | mishnahw_pubPlace
mishnahw_model.catDescPart = notAllowed
mishnahw_model.addressLike = mishnahw_email | mishnahw_address
mishnahw_model.addressLike_alternation =
  mishnahw_email | mishnahw_address
mishnahw_model.addressLike_sequence = mishnahw_email, mishnahw_address
mishnahw_model.addressLike_sequenceOptional =
  mishnahw_email?, mishnahw_address?
mishnahw_model.addressLike_sequenceOptionalRepeatable =
  mishnahw_email*, mishnahw_address*
mishnahw_model.addressLike_sequenceRepeatable =
  mishnahw_email+, mishnahw_address+
mishnahw_model.nameLike =
  mishnahw_model.nameLike.agent
  | mishnahw_model.offsetLike
  | mishnahw_model.placeStateLike
  | mishnahw_rs
  | mishnahw_idno
  | mishnahw_model.persNamePart
mishnahw_model.nameLike_alternation =
  mishnahw_model.nameLike.agent_alternation
  | mishnahw_model.offsetLike_alternation
  | mishnahw_model.placeStateLike_alternation
  | mishnahw_rs
  | mishnahw_idno
  | mishnahw_model.persNamePart_alternation
mishnahw_model.nameLike_sequence =
  mishnahw_model.nameLike.agent_sequence,
  mishnahw_model.offsetLike_sequence,
  mishnahw_model.placeStateLike_sequence,
  mishnahw_rs,
  mishnahw_idno,
  mishnahw_model.persNamePart_sequence
mishnahw_model.nameLike_sequenceOptional =
  mishnahw_model.nameLike.agent_sequenceOptional?,
  mishnahw_model.offsetLike_sequenceOptional?,
  mishnahw_model.placeStateLike_sequenceOptional?,
  mishnahw_rs?,
  mishnahw_idno?,
  mishnahw_model.persNamePart_sequenceOptional?
mishnahw_model.nameLike_sequenceOptionalRepeatable =
  mishnahw_model.nameLike.agent_sequenceOptionalRepeatable*,
  mishnahw_model.offsetLike_sequenceOptionalRepeatable*,
  mishnahw_model.placeStateLike_sequenceOptionalRepeatable*,
  mishnahw_rs*,
  mishnahw_idno*,
  mishnahw_model.persNamePart_sequenceOptionalRepeatable*
mishnahw_model.nameLike_sequenceRepeatable =
  mishnahw_model.nameLike.agent_sequenceRepeatable+,
  mishnahw_model.offsetLike_sequenceRepeatable+,
  mishnahw_model.placeStateLike_sequenceRepeatable+,
  mishnahw_rs+,
  mishnahw_idno+,
  mishnahw_model.persNamePart_sequenceRepeatable+
mishnahw_model.global =
  mishnahw_model.global.meta
  | mishnahw_model.milestoneLike
  | mishnahw_model.noteLike
  | mishnahw_model.global.edit
  | mishnahw_metamark
mishnahw_model.biblPart =
  mishnahw_model.respLike
  | mishnahw_model.imprintPart
  | mishnahw_series
  | mishnahw_citedRange
  | mishnahw_bibl
  | mishnahw_relatedItem
  | mishnahw_textLang
  | mishnahw_edition
  | mishnahw_extent
  | mishnahw_availability
  | mishnahw_msIdentifier
mishnahw_model.frontPart =
  mishnahw_model.frontPart.drama | mishnahw_divGen | mishnahw_titlePage
mishnahw_model.addrPart =
  mishnahw_model.nameLike
  | mishnahw_addrLine
  | mishnahw_street
  | mishnahw_postCode
  | mishnahw_postBox
mishnahw_model.pPart.data =
  mishnahw_model.dateLike
  | mishnahw_model.measureLike
  | mishnahw_model.addressLike
  | mishnahw_model.nameLike
mishnahw_model.inter =
  mishnahw_model.egLike
  | mishnahw_model.oddDecl
  | mishnahw_model.biblLike
  | mishnahw_model.labelLike
  | mishnahw_model.listLike
  | mishnahw_model.stageLike
  | mishnahw_model.qLike
mishnahw_model.common =
  mishnahw_model.divPart | mishnahw_model.inter | mishnahw_include
mishnahw_model.phrase =
  mishnahw_model.segLike
  | mishnahw_model.highlighted
  | mishnahw_model.graphicLike
  | mishnahw_model.pPart.msdesc
  | mishnahw_model.pPart.edit
  | mishnahw_model.ptrLike
  | mishnahw_model.lPart
  | mishnahw_model.phrase.xml
  | mishnahw_model.specDescLike
  | mishnahw_model.pPart.data
mishnahw_model.limitedPhrase =
  mishnahw_model.hiLike
  | mishnahw_model.emphLike
  | mishnahw_model.pPart.msdesc
  | mishnahw_model.pPart.editorial
  | mishnahw_model.ptrLike
  | mishnahw_model.phrase.xml
  | mishnahw_model.pPart.data
mishnahw_model.divLike = mishnahw_div
mishnahw_model.divGenLike = mishnahw_divGen
mishnahw_model.div1Like = mishnahw_div1
mishnahw_model.div2Like = mishnahw_div2
mishnahw_model.div3Like = mishnahw_div3
mishnahw_model.div4Like = notAllowed
mishnahw_model.applicationLike = mishnahw_application
mishnahw_model.editorialDeclPart =
  mishnahw_correction
  | mishnahw_normalization
  | mishnahw_quotation
  | mishnahw_hyphenation
  | mishnahw_segmentation
  | mishnahw_stdVals
  | mishnahw_interpretation
  | mishnahw_punctuation
mishnahw_model.correspActionPart =
  mishnahw_model.dateLike
  | mishnahw_model.addressLike
  | mishnahw_model.nameLike
  | mishnahw_note
mishnahw_model.correspContextPart =
  mishnahw_model.ptrLike | mishnahw_model.pLike | mishnahw_note
mishnahw_model.correspDescPart =
  mishnahw_note | mishnahw_correspAction | mishnahw_correspContext
mishnahw_att.source.attributes = mishnahw_att.source.attribute.source
mishnahw_att.source.attribute.source =
  
  ## provides a pointer to the bibliographical source from which a quotation or citation is drawn.
  attribute source {
    list { xsd:anyURI+ }
  }?
mishnahw_model.resourceLike = mishnahw_text | mishnahw_sourceDoc
mishnahw_att.personal.attributes =
  mishnahw_att.naming.attributes,
  mishnahw_att.personal.attribute.full,
  mishnahw_att.personal.attribute.sort
mishnahw_att.personal.attribute.full =
  
  ## indicates whether the name component is given in full, as an abbreviation or simply as an initial.
  [ a:defaultValue = "yes" ]
  attribute full {
    
    ## the name component is spelled out in full.
    "yes"
    | 
      ## (abbreviated) the name component is given in an abbreviated form.
      "abb"
    | 
      ## (initial letter) the name component is indicated only by one initial.
      "init"
  }?
mishnahw_att.personal.attribute.sort =
  
  ## specifies the sort order of the name component in relation to others within the name.
  attribute sort { xsd:nonNegativeInteger }?
mishnahw_att.milestoneUnit.attributes =
  mishnahw_att.milestoneUnit.attribute.unit
mishnahw_att.milestoneUnit.attribute.unit =
  
  ## provides a conventional name for the kind of section changing at this milestone.
  ## Suggested values include: 1] page; 2] column; 3] line; 4] book; 5] poem; 6] canto; 7] speaker; 8] stanza; 9] act; 10] scene; 11] section; 12] absent; 13] unnumbered
  attribute unit {
    
    ## physical page breaks (synonymous with the pb element).
    "page"
    | 
      ## column breaks.
      "column"
    | 
      ## line breaks (synonymous with the lb element).
      "line"
    | 
      ## any units termed book, liber, etc.
      "book"
    | 
      ## individual poems in a collection.
      "poem"
    | 
      ## cantos or other major sections of a poem.
      "canto"
    | 
      ## changes of speaker or narrator.
      "speaker"
    | 
      ## stanzas within a poem, book, or canto.
      "stanza"
    | 
      ## acts within a play.
      "act"
    | 
      ## scenes within a play or act.
      "scene"
    | 
      ## sections of any kind.
      "section"
    | 
      ## passages not present in the reference edition.
      "absent"
    | 
      ## passages present in the text, but not to be included as part of the reference.
      "unnumbered"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }
mishnahw_p =
  
  ## (paragraph) marks paragraphs in prose. [3.1. Paragraphs 7.2.5. Speech Contents]
  element p {
    mishnahw_macro.paraContent
    >> sch:pattern [
         id = "digital_mishnah_witness-p-abstractModel-p-constraint-4"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:p or ancestor::tei:ab)          and not(parent::tei:exemplum                |parent::tei:item                |parent::tei:note                |parent::tei:q                |parent::tei:quote                |parent::tei:remarks                |parent::tei:said                |parent::tei:sp                |parent::tei:stage                |parent::tei:cell                |parent::tei:figure)"
             "\x{a}" ~
             "        Abstract model violation: Paragraphs may not contain other paragraphs or ab elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "digital_mishnah_witness-p-abstractModel-structure-l-constraint-5"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:p[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div, p, or ab.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attributes,
    mishnahw_att.declaring.attributes,
    mishnahw_att.fragmentable.attributes,
    mishnahw_att.written.attributes,
    empty
  }
mishnahw_foreign =
  
  ## identifies a word or phrase as belonging to some language other than that of the surrounding text. [3.3.2.1. Foreign Words or Expressions]
  element foreign {
    mishnahw_macro.phraseSeq, mishnahw_att.global.attributes, empty
  }
mishnahw_emph =
  
  ## (emphasized) marks words or phrases which are stressed or emphasized for linguistic or rhetorical effect. [3.3.2.2. Emphatic Words and Phrases 3.3.2. Emphasis, Foreign Words, and Unusual Language]
  element emph {
    mishnahw_macro.paraContent, mishnahw_att.global.attributes, empty
  }
mishnahw_hi =
  
  ## (highlighted) marks a word or phrase as graphically distinct from the surrounding text, for reasons concerning which no claim is made. [3.3.2.2. Emphatic Words and Phrases 3.3.2. Emphasis, Foreign Words, and Unusual Language]
  element hi {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    mishnahw_att.written.attributes,
    empty
  }
mishnahw_distinct =
  
  ## identifies any word or phrase which is regarded as linguistically distinct, for example as archaic, technical, dialectal, non-preferred, etc., or as forming part of a sublanguage. [3.3.2.3. Other Linguistically Distinct Material]
  element distinct {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    
    ## specifies the sublanguage or register to which the word or phrase is being assigned
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## specifies how the phrase is distinct diachronically
    attribute time { xsd:string }?,
    
    ## specifies how the phrase is distinct diatopically
    attribute space { xsd:string }?,
    
    ## specifies how the phrase is distinct diastatically
    attribute social { xsd:string }?,
    empty
  }
mishnahw_said =
  
  ## (speech or thought) indicates passages thought or spoken aloud, whether explicitly indicated in the source or not, whether directly or indirectly reported, whether by real people or fictional characters. [3.3.3. Quotation]
  element said {
    mishnahw_macro.specialPara,
    mishnahw_att.global.attributes,
    mishnahw_att.ascribed.attributes,
    
    ## may be used to indicate whether the quoted matter is regarded as having been vocalized or signed.
    [ a:defaultValue = "unknown" ]
    attribute aloud {
      xsd:boolean
      | (
         ##
         "unknown"
         | 
           ##
           "inapplicable")
    }?,
    
    ## may be used to indicate whether the quoted matter is regarded as direct or indirect speech.
    [ a:defaultValue = "true" ]
    attribute direct {
      xsd:boolean
      | (
         ##
         "unknown"
         | 
           ##
           "inapplicable")
    }?,
    empty
  }
mishnahw_quote =
  
  ## (quotation) contains a phrase or passage attributed by the narrator or author to some agency external to the text. [3.3.3. Quotation 4.3.1. Grouped Texts]
  element quote {
    mishnahw_macro.specialPara,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.msExcerpt.attributes,
    mishnahw_att.source.attributes,
    empty
  }
mishnahw_q =
  
  ## (quoted) contains material which is distinguished from the surrounding text using quotation marks or a similar method, for any one of a variety of reasons including, but not limited to: direct speech or thought, technical terms or jargon, authorial distance, quotations from elsewhere, and passages that are mentioned but not used. [3.3.3. Quotation]
  element q {
    mishnahw_macro.specialPara,
    mishnahw_att.global.attributes,
    mishnahw_att.ascribed.attributes,
    mishnahw_att.source.attributes,
    
    ## may be used to indicate whether the offset passage is spoken or thought, or to characterize it more finely.
    ## Suggested values include: 1] spoken; 2] thought; 3] written; 4] soCalled; 5] foreign; 6] distinct; 7] term; 8] emph; 9] mentioned
    attribute type {
      
      ## representation of speech
      "spoken"
      | 
        ## representation of thought, e.g. internal monologue
        "thought"
      | 
        ## quotation from a written source
        "written"
      | 
        ## authorial distance
        "soCalled"
      | 
        ##
        "foreign"
      | 
        ## linguistically distinct
        "distinct"
      | 
        ## technical term
        "term"
      | 
        ## rhetorically emphasized
        "emph"
      | 
        ## refering to itself, not its normal referent
        "mentioned"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_cit =
  
  ## (cited quotation) contains a quotation from some other document, together with a bibliographic reference to its source. In a dictionary it may contain an example text with at least one occurrence of the word form, used in the sense being described, or a translation of the headword, or an example. [3.3.3. Quotation 4.3.1. Grouped Texts 9.3.5.1. Examples]
  element cit {
    (mishnahw_model.qLike
     | mishnahw_model.egLike
     | mishnahw_model.biblLike
     | mishnahw_model.ptrLike
     | mishnahw_model.global
     | mishnahw_model.entryPart)+,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_mentioned =
  
  ## marks words or phrases mentioned, not used. [3.3.3. Quotation]
  element mentioned {
    mishnahw_macro.phraseSeq, mishnahw_att.global.attributes, empty
  }
mishnahw_soCalled =
  
  ## contains a word or phrase for which the author or narrator indicates a disclaiming of responsibility, for example by the use of scare quotes or italics. [3.3.3. Quotation]
  element soCalled {
    mishnahw_macro.phraseSeq, mishnahw_att.global.attributes, empty
  }
mishnahw_desc =
  
  ## (description) contains a brief description of the object documented by its parent element, including its intended usage, purpose, or application where this is appropriate. [22.4.1. Description of Components]
  element desc {
    mishnahw_macro.limitedContent,
    mishnahw_att.global.attributes,
    mishnahw_att.translatable.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_gloss =
  
  ## identifies a phrase or word used to provide a gloss or definition for some other word or phrase. [3.3.4. Terms, Glosses, Equivalents, and Descriptions 22.4.1. Description of Components]
  element gloss {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.declaring.attributes,
    mishnahw_att.translatable.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.pointing.attributes,
    mishnahw_att.cReferencing.attributes,
    empty
  }
mishnahw_term =
  
  ## contains a single-word, multi-word, or symbolic designation which is regarded as a technical term. [3.3.4. Terms, Glosses, Equivalents, and Descriptions]
  element term {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.declaring.attributes,
    mishnahw_att.pointing.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.canonical.attributes,
    mishnahw_att.sortable.attributes,
    mishnahw_att.cReferencing.attributes,
    empty
  }
mishnahw_sic =
  
  ## (Latin for thus or so
  ##    ) contains text reproduced although apparently incorrect or inaccurate. [3.4.1. Apparent Errors]
  element sic {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    mishnahw_att.source.attributes,
    empty
  }
mishnahw_corr =
  
  ## (correction) contains the correct form of a passage apparently erroneous in the copy text. [3.4.1. Apparent Errors]
  element corr {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    mishnahw_att.editLike.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_choice =
  
  ## groups a number of alternative encodings for the same point in a text. [3.4. Simple Editorial Changes]
  element choice {
    (mishnahw_model.choicePart | mishnahw_choice)*,
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_reg =
  
  ## (regularization) contains a reading which has been regularized or normalized in some sense. [3.4.2. Regularization and
  ## Normalization 12. Critical Apparatus]
  element reg {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    mishnahw_att.editLike.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_orig =
  
  ## (original form) contains a reading which is marked as following the original, rather than being normalized or corrected. [3.4.2. Regularization and
  ## Normalization 12. Critical Apparatus]
  element orig {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    mishnahw_att.source.attributes,
    empty
  }
mishnahw_gap =
  
  ## indicates a point where material has been omitted in a transcription, whether for editorial reasons described in the TEI header, as part of sampling practice, or because the material is illegible, invisible, or inaudible. [3.4.3. Additions, Deletions, and Omissions]
  element gap {
    (mishnahw_model.descLike | mishnahw_model.certLike)*,
    mishnahw_att.global.attributes,
    mishnahw_att.timed.attributes,
    mishnahw_att.editLike.attribute.evidence,
    mishnahw_att.editLike.attribute.instant,
    mishnahw_att.dimensions.attribute.unit,
    mishnahw_att.dimensions.attribute.quantity,
    mishnahw_att.dimensions.attribute.precision,
    mishnahw_att.dimensions.attribute.scope,
    mishnahw_att.ranging.attribute.atLeast,
    mishnahw_att.ranging.attribute.atMost,
    mishnahw_att.ranging.attribute.min,
    mishnahw_att.ranging.attribute.max,
    mishnahw_att.ranging.attribute.confidence,
    mishnahw_att.source.attribute.source,
    
    ## indicates the size of the object concerned using a project-specific vocabulary combining quantity and units in a single string of words.
    attribute extent { mishnahw_data.count }?,
    
    ## gives the reason for omission. Sample values include sampling, inaudible, irrelevant, cancelled.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    
    ## in the case of text omitted from the transcription because of deliberate deletion by an identifiable hand, indicates the hand which made the deletion.
    attribute hand { xsd:anyURI }?,
    
    ## in the case of text omitted because of damage, categorizes the cause of the damage, if it can be identified.
    ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
    attribute agent {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_add =
  
  ## (addition) contains letters, words, or phrases inserted in the source text by an author, scribe, or a previous annotator or corrector. [3.4.3. Additions, Deletions, and Omissions]
  element add {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    mishnahw_att.transcriptional.attributes,
    mishnahw_att.placement.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_del =
  
  ## (deletion) contains a letter, word, or passage deleted, marked as deleted, or otherwise indicated as superfluous or spurious in the copy text by an author, scribe, or a previous annotator or corrector. [3.4.3. Additions, Deletions, and Omissions]
  element del {
    (text
     | mishnahw_model.pPart.transcriptional
     | mishnahw_model.milestoneLike
     | mishnahw_model.segLike
     | mishnahw_model.pPart.editorial)*,
    mishnahw_att.global.attributes,
    mishnahw_att.transcriptional.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_unclear =
  
  ## contains a word, phrase, or passage which cannot be transcribed with certainty because it is illegible or inaudible in the source. [11.3.3.1. Damage, Illegibility, and Supplied Text 3.4.3. Additions, Deletions, and Omissions]
  element unclear {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    mishnahw_att.editLike.attributes,
    
    ## indicates why the material is hard to transcribe.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    
    ## Where the difficulty in transcription arises from action (partial deletion, etc.) assignable to an identifiable hand, signifies the hand responsible for the action.
    attribute hand { xsd:anyURI }?,
    
    ## Where the difficulty in transcription arises from damage, categorizes the cause of the damage, if it can be identified.
    ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
    attribute agent {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_name =
  
  ## (name, proper noun) contains a proper noun or noun phrase. [3.5.1. Referring Strings]
  element name {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.personal.attributes,
    mishnahw_att.datable.attributes,
    mishnahw_att.editLike.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_rs =
  
  ## (referencing string) contains a general purpose name or referring string. [13.2.1. Personal Names 3.5.1. Referring Strings]
  element rs {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.naming.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.source.attributes,
    empty
  }
mishnahw_email =
  
  ## (electronic mail address) contains an email address identifying a location to which email messages can be delivered. [3.5.2. Addresses]
  element email {
    mishnahw_macro.phraseSeq, mishnahw_att.global.attributes, empty
  }
mishnahw_address =
  
  ## contains a postal address, for example of a publisher, an organization, or an individual. [3.5.2. Addresses 2.2.4. Publication, Distribution, Licensing, etc. 3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element address {
    (mishnahw_model.global*,
     (mishnahw_model.addrPart, mishnahw_model.global*)+),
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_addrLine =
  
  ## (address line) contains one line of a postal address. [3.5.2. Addresses 2.2.4. Publication, Distribution, Licensing, etc. 3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element addrLine {
    mishnahw_macro.phraseSeq, mishnahw_att.global.attributes, empty
  }
mishnahw_street =
  
  ## contains a full street address including any name or number identifying a building as well as the name of the street or route on which it is located. [3.5.2. Addresses]
  element street {
    mishnahw_macro.phraseSeq, mishnahw_att.global.attributes, empty
  }
mishnahw_postCode =
  
  ## (postal code) contains a numerical or alphanumeric code used as part of a postal address to simplify sorting or delivery of mail. [3.5.2. Addresses]
  element postCode { text, mishnahw_att.global.attributes, empty }
mishnahw_postBox =
  
  ## (postal box or post office box) contains a number or other identifier for some postal delivery point other than a street address. [3.5.2. Addresses]
  element postBox { text, mishnahw_att.global.attributes, empty }
mishnahw_num =
  
  ## (number) contains a number, written in any form. [3.5.3. Numbers and
  ## Measures]
  element num {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.ranging.attributes,
    
    ## indicates the type of numeric value.
    ## Suggested values include: 1] cardinal; 2] ordinal; 3] fraction; 4] percentage
    attribute type {
      
      ## absolute number, e.g. 21, 21.5
      "cardinal"
      | 
        ## ordinal number, e.g. 21st
        "ordinal"
      | 
        ## fraction, e.g. one half or three-quarters
        "fraction"
      | 
        ## a percentage
        "percentage"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## supplies the value of the number in standard form.
    attribute value {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    }?,
    empty
  }
mishnahw_measure =
  
  ## contains a word or phrase referring to some quantity of an object or commodity, usually comprising a number, a unit, and a commodity name. [3.5.3. Numbers and
  ## Measures]
  element measure {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.measurement.attributes,
    
    ## specifies the type of measurement in any convenient typology.
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_measureGrp =
  
  ## (measure group) contains a group of dimensional specifications which relate to the same object, for example the height and width of a manuscript page. [10.3.4. Dimensions]
  element measureGrp {
    (text | mishnahw_model.gLike | mishnahw_model.measureLike)*,
    mishnahw_att.global.attributes,
    mishnahw_att.measurement.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_date =
  
  ## contains a date in any format. [3.5.4. Dates and Times 2.2.4. Publication, Distribution, Licensing, etc. 2.6. The Revision Description 3.11.2.4. Imprint, Size of a Document, and Reprint Information 15.2.3. The Setting Description 13.3.6. Dates and Times]
  element date {
    (text
     | mishnahw_model.gLike
     | mishnahw_model.phrase
     | mishnahw_model.global)*,
    mishnahw_att.global.attributes,
    mishnahw_att.datable.attributes,
    mishnahw_att.editLike.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_time =
  
  ## contains a phrase defining a time of day in any format. [3.5.4. Dates and Times]
  element time {
    (text
     | mishnahw_model.gLike
     | mishnahw_model.phrase
     | mishnahw_model.global)*,
    mishnahw_att.global.attributes,
    mishnahw_att.datable.attributes,
    mishnahw_att.editLike.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_abbr =
  
  ## (abbreviation) contains an abbreviation of any sort. [3.5.5. Abbreviations and Their Expansions]
  element abbr {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.source.attributes,
    mishnahw_att.typed.attribute.subtype,
    
    ## allows the encoder to classify the abbreviation according to some convenient typology.
    ## Sample values include: 1] suspension; 2] contraction; 3] brevigraph; 4] superscription; 5] acronym; 6] title; 7] organization; 8] geographic
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_expan =
  
  ## (expansion) contains the expansion of an abbreviation. [3.5.5. Abbreviations and Their Expansions]
  element expan {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.editLike.attributes,
    empty
  }
mishnahw_ptr =
  
  ## (pointer) defines a pointer to another location. [3.6. Simple Links and Cross-References 16.1. Links]
  element ptr {
    empty
    >> sch:pattern [
         id = "digital_mishnah_witness-ptr-ptrAtts-constraint-6"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ptr"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "attributes @target and @cRef may be supplied on "
             sch:name [ ]
             "."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attributes,
    mishnahw_att.pointing.attributes,
    mishnahw_att.internetMedia.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.declaring.attributes,
    mishnahw_att.cReferencing.attributes,
    empty
  }
mishnahw_ref =
  
  ## (reference) defines a reference to another location, possibly modified by additional text or comment. [3.6. Simple Links and Cross-References 16.1. Links]
  element ref {
    mishnahw_macro.paraContent
    >> sch:pattern [
         id = "digital_mishnah_witness-ref-refAtts-constraint-7"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ref"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "	attributes @target' and @cRef' may be supplied on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attributes,
    mishnahw_att.pointing.attributes,
    mishnahw_att.internetMedia.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.declaring.attributes,
    mishnahw_att.cReferencing.attributes,
    empty
  }
mishnahw_list =
  
  ## contains any sequence of items organized as a list. [3.7. Lists]
  element list {
    ((mishnahw_model.divTop | mishnahw_model.global)*,
     ((mishnahw_item, mishnahw_model.global*)+
      | (mishnahw_headLabel?,
         mishnahw_headItem?,
         (mishnahw_label,
          mishnahw_model.global*,
          mishnahw_item,
          mishnahw_model.global*)+)),
     (mishnahw_model.divBottom, mishnahw_model.global*)*)
    >> sch:pattern [
         id =
           "digital_mishnah_witness-list-gloss-list-must-have-labels-constraint-9"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:list[@type='gloss']"
           "\x{a}" ~
           "	              "
           sch:assert [
             test = "tei:label"
             'The content of a "gloss" list should include a sequence of one or more pairs of a label element followed by an item element'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attributes,
    mishnahw_att.sortable.attributes,
    mishnahw_att.typed.attribute.subtype,
    
    ## describes the nature of the items in the list.
    ## Suggested values include: 1] gloss; 2] index; 3] instructions; 4] litany; 5] syllogism
    attribute type {
      
      ## each list item glosses some term or concept, which is given by a label element preceding the list item.
      "gloss"
      | 
        ## each list item is an entry in an index such as the alphabetical topical index at the back of a print volume.
        "index"
      | 
        ## each list item is a step in a sequence of instructions, as in a recipe.
        "instructions"
      | 
        ## each list item is one of a sequence of petitions, supplications or invocations, typically in a religious ritual.
        "litany"
      | 
        ## each list item is part of an argument consisting of two or more propositions and a final conclusion derived from them.
        "syllogism"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_item =
  
  ## contains one component of a list. [3.7. Lists 2.6. The Revision Description]
  element item {
    mishnahw_macro.specialPara,
    mishnahw_att.global.attributes,
    mishnahw_att.sortable.attributes,
    empty
  }
mishnahw_label =
  
  ## contains any label or heading used to identify part of a text, typically but not exclusively in a list or glossary. [3.7. Lists]
  element label {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.placement.attributes,
    mishnahw_att.written.attributes,
    empty
  }
mishnahw_head =
  
  ## (heading) contains any type of heading, for example the title of a section, or the heading of a list, glossary, manuscript description, etc. [4.2.1. Headings and Trailers]
  element head {
    (text
     | mishnahw_lg
     | mishnahw_model.gLike
     | mishnahw_model.phrase
     | mishnahw_model.inter
     | mishnahw_model.lLike
     | mishnahw_model.global)*,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.written.attributes,
    empty
  }
mishnahw_headLabel =
  
  ## (heading for list labels) contains the heading for the label or term column in a glossary list or similar structured list. [3.7. Lists]
  element headLabel {
    mishnahw_macro.phraseSeq, mishnahw_att.global.attributes, empty
  }
mishnahw_headItem =
  
  ## (heading for list items) contains the heading for the item or gloss column in a glossary list or similar structured list. [3.7. Lists]
  element headItem {
    mishnahw_macro.phraseSeq, mishnahw_att.global.attributes, empty
  }
mishnahw_note =
  
  ## contains a note or annotation. [3.8.1. Notes and Simple Annotation 2.2.6. The Notes Statement 3.11.2.8. Notes and Statement of Language 9.3.5.4. Notes within Entries]
  element note {
    mishnahw_macro.specialPara,
    mishnahw_att.global.attributes,
    mishnahw_att.placement.attributes,
    mishnahw_att.pointing.attributes,
    mishnahw_att.source.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.written.attributes,
    
    ## indicates whether the copy text shows the exact place of reference for the note.
    [ a:defaultValue = "true" ] attribute anchored { xsd:boolean }?,
    
    ## points to the end of the span to which the note is attached, if the note is not embedded in the text at that point.
    attribute targetEnd {
      list { xsd:anyURI+ }
    }?,
    empty
  }
mishnahw_index =
  
  ## (index entry) marks a location to be indexed for whatever purpose. [3.8.2. Index Entries]
  element index {
    (mishnahw_term, mishnahw_index?)*,
    mishnahw_att.global.attributes,
    mishnahw_att.spanning.attributes,
    
    ## a single word which follows the rules defining a legal XML name (see ), supplying a name to specify which index (of several) the index entry belongs to.
    attribute indexName { xsd:Name }?,
    empty
  }
mishnahw_media =
  
  ## indicates the location of any form of external media such as an audio or video clip etc. [3.9. Graphics and Other Non-textual Components]
  element media {
    mishnahw_model.descLike*,
    mishnahw_att.typed.attributes,
    mishnahw_att.global.attributes,
    mishnahw_att.media.attribute.width,
    mishnahw_att.media.attribute.height,
    mishnahw_att.media.attribute.scale,
    mishnahw_att.resourced.attributes,
    mishnahw_att.declaring.attributes,
    mishnahw_att.timed.attributes,
    
    ## (MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type
    attribute mimeType {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    },
    empty
  }
mishnahw_graphic =
  
  ## indicates the location of a graphic or illustration, either forming part of a text, or providing an image of it. [3.9. Graphics and Other Non-textual Components 11.1. Digital Facsimiles]
  element graphic {
    mishnahw_model.descLike*,
    mishnahw_att.global.attributes,
    mishnahw_att.media.attributes,
    mishnahw_att.resourced.attributes,
    mishnahw_att.declaring.attributes,
    empty
  }
mishnahw_binaryObject =
  
  ## provides encoded binary data representing an inline graphic, audio, video or other object. [3.9. Graphics and Other Non-textual Components]
  element binaryObject {
    text,
    mishnahw_att.global.attributes,
    mishnahw_att.media.attributes,
    mishnahw_att.timed.attributes,
    mishnahw_att.typed.attributes,
    
    ## The encoding used to encode the binary data. If not specified, this is assumed to be Base64.
    attribute encoding {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
mishnahw_milestone =
  
  ## marks a boundary point separating any kind of section of a text, typically but not necessarily indicating a point at which some part of a standard reference system changes, where the change is not represented by a structural element. [3.10.3. Milestone
  ## Elements]
  element milestone {
    empty,
    mishnahw_att.global.attributes,
    mishnahw_att.milestoneUnit.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.edition.attributes,
    mishnahw_att.spanning.attributes,
    mishnahw_att.breaking.attributes,
    empty
  }
mishnahw_gb =
  
  ## (gathering begins) marks the point in a transcribed codex at which a new gathering or quire begins. [3.10.3. Milestone
  ## Elements]
  element gb {
    empty,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.spanning.attributes,
    mishnahw_att.breaking.attributes,
    empty
  }
mishnahw_pb =
  
  ## (page break) marks the start of a new page in a paginated document. [3.10.3. Milestone
  ## Elements]
  element pb {
    empty,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.edition.attributes,
    mishnahw_att.spanning.attributes,
    mishnahw_att.breaking.attributes,
    empty
  }
mishnahw_lb =
  
  ## (line break) marks the start of a new (typographic) line in some edition or version of a text. [3.10.3. Milestone
  ## Elements 7.2.5. Speech Contents]
  element lb {
    empty,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.edition.attributes,
    mishnahw_att.spanning.attributes,
    mishnahw_att.breaking.attributes,
    empty
  }
mishnahw_cb =
  
  ## (column break) marks the beginning of a new column of a text on a multi-column page. [3.10.3. Milestone
  ## Elements]
  element cb {
    empty,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.edition.attributes,
    mishnahw_att.spanning.attributes,
    mishnahw_att.breaking.attributes,
    empty
  }
mishnahw_analytic =
  
  ## (analytic level) contains bibliographic elements describing an item (e.g. an article or poem) published within a monograph or journal and not as an independent publication. [3.11.2.1. Analytic, Monographic, and Series Levels]
  element analytic {
    (mishnahw_author
     | mishnahw_editor
     | mishnahw_respStmt
     | mishnahw_title
     | mishnahw_model.ptrLike
     | mishnahw_date
     | mishnahw_textLang
     | mishnahw_idno
     | mishnahw_availability)*,
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_monogr =
  
  ## (monographic level) contains bibliographic elements describing an item (e.g. a book or journal) published as an independent item (i.e. as a separate physical object). [3.11.2.1. Analytic, Monographic, and Series Levels]
  element monogr {
    ((((mishnahw_author
        | mishnahw_editor
        | mishnahw_meeting
        | mishnahw_respStmt),
       (mishnahw_author
        | mishnahw_editor
        | mishnahw_meeting
        | mishnahw_respStmt)*,
       mishnahw_title+,
       (mishnahw_model.ptrLike
        | mishnahw_idno
        | mishnahw_textLang
        | mishnahw_editor
        | mishnahw_respStmt)*)
      | ((mishnahw_title | mishnahw_model.ptrLike | mishnahw_idno)+,
         (mishnahw_textLang
          | mishnahw_author
          | mishnahw_editor
          | mishnahw_meeting
          | mishnahw_respStmt)*)
      | mishnahw_idno)?,
     mishnahw_availability*,
     mishnahw_model.noteLike*,
     (mishnahw_edition,
      (mishnahw_idno
       | mishnahw_model.ptrLike
       | mishnahw_editor
       | mishnahw_sponsor
       | mishnahw_funder
       | mishnahw_respStmt)*)*,
     mishnahw_imprint,
     (mishnahw_imprint | mishnahw_extent | mishnahw_biblScope)*),
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_series =
  
  ## (series information) contains information about the series in which a book or other bibliographic item has appeared. [3.11.2.1. Analytic, Monographic, and Series Levels]
  element series {
    (text
     | mishnahw_model.gLike
     | mishnahw_title
     | mishnahw_model.ptrLike
     | mishnahw_editor
     | mishnahw_respStmt
     | mishnahw_biblScope
     | mishnahw_idno
     | mishnahw_textLang
     | mishnahw_model.global
     | mishnahw_availability)*,
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_author =
  
  ## in a bibliographic reference, contains the name(s) of an author, personal or corporate, of a work; for example in the same form as that provided by a recognized bibliographic name authority. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement]
  element author {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.naming.attributes,
    empty
  }
mishnahw_editor =
  
  ## contains a secondary statement of responsibility for a bibliographic item, for example the name of an individual, institution or organization, (or of several such) acting as editor, compiler, translator, etc. [3.11.2.2. Titles, Authors, and Editors]
  element editor {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.naming.attributes,
    empty
  }
mishnahw_respStmt =
  
  ## (statement of responsibility) supplies a statement of responsibility for the intellectual content of a text, edition, recording, or series, where the specialized elements for authors, editors, etc. do not suffice or do not apply. May also be used to encode information about individuals or organizations which have played a role in the production or distribution of a bibliographic work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element respStmt {
    ((mishnahw_resp+, mishnahw_model.nameLike.agent+)
     | (mishnahw_model.nameLike.agent+, mishnahw_resp+)),
    mishnahw_att.global.attributes,
    mishnahw_att.canonical.attributes,
    empty
  }
mishnahw_resp =
  
  ## (responsibility) contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role in the production or distribution of a work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element resp {
    mishnahw_macro.phraseSeq.limited,
    mishnahw_att.global.attributes,
    mishnahw_att.canonical.attributes,
    mishnahw_att.datable.attributes,
    empty
  }
mishnahw_title =
  
  ## contains a title for any kind of work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.5. The Series Statement]
  element title {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    mishnahw_att.canonical.attributes,
    mishnahw_att.typed.attribute.subtype,
    
    ## classifies the title according to some convenient typology.
    ## Sample values include: 1] main; 2] sub(subordinate) ; 3] alt(alternate) ; 4] short; 5] desc(descriptive) 
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## indicates the bibliographic level for a title, that is, whether it identifies an article, book, journal, series, or unpublished material.
    attribute level {
      
      ## (analytic) the title applies to an analytic item, such as an article, poem, or other work published as part of a larger item.
      "a"
      | 
        ## (monographic) the title applies to a monograph such as a book or other item considered to be a distinct publication, including single volumes of multi-volume works
        "m"
      | 
        ## (journal) the title applies to any serial or periodical publication such as a journal, magazine, or newspaper
        "j"
      | 
        ## (series) the title applies to a series of otherwise distinct publications such as a collection
        "s"
      | 
        ## (unpublished) the title applies to any unpublished material (including theses and dissertations unless published by a commercial press)
        "u"
    }?,
    empty
  }
mishnahw_meeting =
  
  ## contains the formalized descriptive title for a meeting or conference, for use in a bibliographic description for an item derived from such a meeting, or as a heading or preamble to publications emanating from it. [3.11.2.2. Titles, Authors, and Editors]
  element meeting {
    mishnahw_macro.limitedContent,
    mishnahw_att.global.attributes,
    mishnahw_att.canonical.attributes,
    empty
  }
mishnahw_imprint =
  
  ## groups information relating to the publication or distribution of a bibliographic item. [3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element imprint {
    ((mishnahw_classCode | mishnahw_catRef)*,
     ((mishnahw_model.imprintPart | mishnahw_model.dateLike),
      mishnahw_respStmt*,
      mishnahw_model.global*)+),
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_publisher =
  
  ## provides the name of the organization responsible for the publication or distribution of a bibliographic item. [3.11.2.4. Imprint, Size of a Document, and Reprint Information 2.2.4. Publication, Distribution, Licensing, etc.]
  element publisher {
    mishnahw_macro.phraseSeq, mishnahw_att.global.attributes, empty
  }
mishnahw_biblScope =
  
  ## (scope of bibliographic reference) defines the scope of a bibliographic reference, for example as a list of page numbers, or a named subdivision of a larger work. [3.11.2.5. Scopes and Ranges in Bibliographic Citations]
  element biblScope {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.citing.attributes,
    empty
  }
mishnahw_citedRange =
  
  ## (cited range) defines the range of cited content, often represented by pages or other units [3.11.2.5. Scopes and Ranges in Bibliographic Citations]
  element citedRange {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.pointing.attributes,
    mishnahw_att.citing.attributes,
    empty
  }
mishnahw_pubPlace =
  
  ## (publication place) contains the name of the place where a bibliographic item was published. [3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element pubPlace {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.naming.attributes,
    empty
  }
mishnahw_bibl =
  
  ## (bibliographic citation) contains a loosely-structured bibliographic citation of which the sub-components may or may not be explicitly tagged. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element bibl {
    (text
     | mishnahw_model.gLike
     | mishnahw_model.highlighted
     | mishnahw_model.pPart.data
     | mishnahw_model.pPart.edit
     | mishnahw_model.segLike
     | mishnahw_model.ptrLike
     | mishnahw_model.biblPart
     | mishnahw_model.global)*,
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.sortable.attributes,
    mishnahw_att.docStatus.attributes,
    empty
  }
mishnahw_biblStruct =
  
  ## (structured bibliographic citation) contains a structured bibliographic citation, in which only bibliographic sub-elements appear and in a specified order. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element biblStruct {
    (mishnahw_analytic*,
     (mishnahw_monogr, mishnahw_series*)+,
     (mishnahw_model.noteLike
      | mishnahw_idno
      | mishnahw_model.ptrLike
      | mishnahw_relatedItem
      | mishnahw_citedRange)*)
    >> sch:pattern [
         id =
           "digital_mishnah_witness-biblStruct-deprecate-altIdentifier-child-constraint-8"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:biblStruct"
           "\x{a}" ~
           "               "
           sch:report [
             test = "child::tei:idno"
             role = "nonfatal"
             "WARNING: use of deprecated method — the use of the idno element as a direct child of the biblStruct element will be removed from the TEI on 2016-09-18"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.sortable.attributes,
    mishnahw_att.docStatus.attributes,
    empty
  }
mishnahw_listBibl =
  
  ## (citation list) contains a list of bibliographic citations of any kind. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element listBibl {
    (mishnahw_model.headLike*,
     (mishnahw_model.biblLike | mishnahw_model.milestoneLike)+,
     empty*),
    mishnahw_att.global.attributes,
    mishnahw_att.sortable.attributes,
    mishnahw_att.declarable.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_relatedItem =
  
  ## contains or references some other bibliographic item which is related to the present one in some specified manner, for example as a constituent or alternative version of it. [3.11.2.7. Related Items]
  element relatedItem {
    ((mishnahw_model.biblLike | mishnahw_model.ptrLike)?)
    >> sch:pattern [
         id =
           "digital_mishnah_witness-relatedItem-targetorcontent1-constraint-9"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relatedItem"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and count( child::* ) > 0"
             "\x{a}" ~
             "If the @target attribute on "
             sch:name [ ]
             " is used, the\x{a}" ~
             "relatedItem element must be empty"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "digital_mishnah_witness-relatedItem-targetorcontent1-constraint-7"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relatedItem"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@target or child::*"
             "A relatedItem element should have either a 'target' attribute\x{a}" ~
             "        or a child element to indicate the related bibliographic item"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    
    ## points to the related bibliographic element by means of an absolute or relative URI reference
    attribute target { xsd:anyURI }?,
    empty
  }
mishnahw_l =
  
  ## (verse line) contains a single, possibly incomplete, line of verse. [3.12.1. Core Tags for Verse 3.12. Passages of Verse or Drama 7.2.5. Speech Contents]
  element l {
    ((text
      | mishnahw_model.gLike
      | mishnahw_model.phrase
      | mishnahw_model.inter
      | mishnahw_model.global)*)
    >> sch:pattern [
         id =
           "digital_mishnah_witness-l-abstractModel-structure-l-constraint-10"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:l"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:l[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain lines or lg elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attributes,
    mishnahw_att.fragmentable.attributes,
    empty
  }
mishnahw_lg =
  
  ## (line group) contains one or more verse lines functioning as a formal unit, e.g. a stanza, refrain, verse paragraph, etc. [3.12.1. Core Tags for Verse 3.12. Passages of Verse or Drama 7.2.5. Speech Contents]
  element lg {
    ((mishnahw_model.divTop | mishnahw_model.global)*,
     (mishnahw_model.lLike
      | mishnahw_model.stageLike
      | mishnahw_model.labelLike
      | mishnahw_lg),
     (mishnahw_model.lLike
      | mishnahw_model.stageLike
      | mishnahw_model.labelLike
      | mishnahw_model.global
      | mishnahw_lg)*,
     (mishnahw_model.divBottom, mishnahw_model.global*)*)
    >> sch:pattern [
         id = "digital_mishnah_witness-lg-atleast1oflggapl-constraint-8"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "count(descendant::tei:lg|descendant::tei:l|descendant::tei:gap) > 0"
             "An lg element\x{a}" ~
             "        must contain at least one child l, lg or gap element."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "digital_mishnah_witness-lg-abstractModel-structure-l-constraint-11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:lg[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain line groups.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attributes,
    mishnahw_att.divLike.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.declaring.attributes,
    empty
  }
mishnahw_sp =
  
  ## (speech) contains an individual speech in a performance text, or a passage presented as such in a prose or verse text. [3.12.2. Core Tags for Drama 3.12. Passages of Verse or Drama 7.2.2. Speeches and Speakers]
  element sp {
    (mishnahw_model.global*,
     (mishnahw_speaker, mishnahw_model.global*)?,
     ((mishnahw_lg
       | mishnahw_model.lLike
       | mishnahw_model.pLike
       | mishnahw_model.listLike
       | mishnahw_model.stageLike
       | mishnahw_model.qLike),
      mishnahw_model.global*)+),
    mishnahw_att.global.attributes,
    mishnahw_att.ascribed.attributes,
    empty
  }
mishnahw_speaker =
  
  ## contains a specialized form of heading or label, giving the name of one or more speakers in a dramatic text or fragment. [3.12.2. Core Tags for Drama]
  element speaker {
    mishnahw_macro.phraseSeq, mishnahw_att.global.attributes, empty
  }
mishnahw_stage =
  
  ## (stage direction) contains any kind of stage direction within a dramatic text or fragment. [3.12.2. Core Tags for Drama 3.12. Passages of Verse or Drama 7.2.4. Stage Directions]
  element stage {
    mishnahw_macro.specialPara,
    mishnahw_att.ascribed.attributes,
    mishnahw_att.global.attributes,
    mishnahw_att.placement.attributes,
    
    ## indicates the kind of stage direction.
    ## Suggested values include: 1] setting; 2] entrance; 3] exit; 4] business; 5] novelistic; 6] delivery; 7] modifier; 8] location; 9] mixed
    attribute type {
      list {
        (
         ## describes a setting.
         "setting"
         | 
           ## describes an entrance.
           "entrance"
         | 
           ## describes an exit.
           "exit"
         | 
           ## describes stage business.
           "business"
         | 
           ## is a narrative, motivating stage direction.
           "novelistic"
         | 
           ## describes how a character speaks.
           "delivery"
         | 
           ## gives some detail about a character.
           "modifier"
         | 
           ## describes a location.
           "location"
         | 
           ## more than one of the above
           "mixed"
         | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })*
      }
    }?,
    empty
  }
mishnahw_teiCorpus =
  
  ## contains the whole of a TEI encoded corpus, comprising a single corpus header and one or more TEI elements, each containing a single text header and a text. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element teiCorpus {
    (mishnahw_teiHeader,
     ((mishnahw_model.resourceLike+,
       (mishnahw_TEI | mishnahw_teiCorpus)*)
      | (mishnahw_TEI | mishnahw_teiCorpus)+)),
    mishnahw_att.global.attributes,
    
    ## The version of the TEI scheme
    [ a:defaultValue = "5.0" ]
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
mishnahw_divGen =
  
  ## (automatically generated text division) indicates the location at which a textual division generated automatically by a text-processing application is to appear. [3.8.2. Index Entries]
  element divGen {
    mishnahw_model.headLike*,
    mishnahw_att.global.attributes,
    
    ## specifies what type of generated text division (e.g. index, table of contents, etc.) is to appear.
    ## Sample values include: 1] index; 2] toc; 3] figlist; 4] tablist
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_textLang =
  
  ## (text language) describes the languages and writing systems identified within the bibliographic work being described, rather than its description. [3.11.2.4. Imprint, Size of a Document, and Reprint Information 10.6.6. Languages and Writing Systems]
  element textLang {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    
    ## (main language) supplies a code which identifies the chief language used in the bibliographic work.
    attribute mainLang {
      xsd:language
      | (
         ##
         "")
    }?,
    
    ## (other languages) one or more codes identifying any other languages used in the bibliographic work.
    attribute otherLangs {
      list {
        (xsd:language
         | (
            ##
            ""))*
      }
    }?,
    empty
  }
mishnahw_att.patternReplacement.attributes =
  mishnahw_att.patternReplacement.attribute.matchPattern,
  mishnahw_att.patternReplacement.attribute.replacementPattern
mishnahw_att.patternReplacement.attribute.matchPattern =
  
  ## specifies a regular expression against which the values of other attributes can be matched.
  attribute matchPattern { xsd:token }
mishnahw_att.patternReplacement.attribute.replacementPattern =
  
  ## specifies a replacement pattern, that is, the skeleton of a relative or absolute URI containing references to groups in the matchPattern which, once subpattern substitution has been performed, complete the URI.
  attribute replacementPattern { text }
mishnahw_teiHeader =
  
  ## (TEI header) supplies descriptive and declarative metadata associated with a digital resource or set of resources. [2.1.1. The TEI Header and Its Components 15.1. Varieties of Composite Text]
  element teiHeader {
    (mishnahw_fileDesc, mishnahw_encodingDesc, mishnahw_revisionDesc),
    mishnahw_att.global.attributes,
    
    ## specifies the kind of document to which the header is attached, for example whether it is a corpus or individual text.
    ## Sample values include: 1] text; 2] corpus
    [ a:defaultValue = "text" ]
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_fileDesc =
  
  ## (file description) contains a full bibliographic description of an electronic file. [2.2. The File Description 2.1.1. The TEI Header and Its Components]
  element fileDesc {
    (mishnahw_titleStmt,
     mishnahw_editionStmt?,
     mishnahw_publicationStmt,
     mishnahw_notesStmt?),
    mishnahw_sourceDesc+,
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_titleStmt =
  
  ## (title statement) groups information about the title of a work and those responsible for its content. [2.2.1. The Title Statement 2.2. The File Description]
  element titleStmt {
    mishnahw_title+,
    mishnahw_model.respLike+,
    mishnahw_orgName*,
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_sponsor =
  
  ## specifies the name of a sponsoring organization or institution. [2.2.1. The Title Statement]
  element sponsor {
    mishnahw_macro.phraseSeq.limited,
    mishnahw_att.global.attributes,
    mishnahw_att.canonical.attributes,
    empty
  }
mishnahw_funder =
  
  ## (funding body) specifies the name of an individual, institution, or organization responsible for the funding of a project or text. [2.2.1. The Title Statement]
  element funder {
    mishnahw_macro.phraseSeq.limited,
    mishnahw_att.global.attributes,
    mishnahw_att.canonical.attributes,
    empty
  }
mishnahw_principal =
  
  ## (principal researcher) supplies the name of the principal researcher responsible for the creation of an electronic text. [2.2.1. The Title Statement]
  element principal {
    mishnahw_macro.phraseSeq.limited,
    mishnahw_att.global.attributes,
    mishnahw_att.canonical.attributes,
    empty
  }
mishnahw_editionStmt =
  
  ## (edition statement) groups information relating to one edition of a text. [2.2.2. The Edition Statement 2.2. The File Description]
  element editionStmt {
    (mishnahw_model.pLike+
     | (mishnahw_edition, mishnahw_model.respLike*)),
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_edition =
  
  ## describes the particularities of one edition of a text. [2.2.2. The Edition Statement]
  element edition {
    mishnahw_macro.phraseSeq, mishnahw_att.global.attributes, empty
  }
mishnahw_extent =
  
  ## describes the approximate size of a text stored on some carrier medium or of some other object, digital or non-digital, specified in any convenient units. [2.2.3. Type and Extent of File 2.2. The File Description 3.11.2.4. Imprint, Size of a Document, and Reprint Information 10.7.1. Object Description]
  element extent {
    mishnahw_macro.phraseSeq, mishnahw_att.global.attributes, empty
  }
mishnahw_publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution of an electronic or other text. [2.2.4. Publication, Distribution, Licensing, etc. 2.2. The File Description]
  [
    sch:pattern [
      id =
        "digital_mishnah_witness-publicationStmt-linter-constraint-12"
      "\x{a}" ~
      "            "
      sch:rule [
        context = "tei:publicationStmt"
        "\x{a}" ~
        "               "
        sch:report [
          test = "not(tei:publisher/following-sibling::tei:pubPlace)"
          "It is\x{a}" ~
          "                           a requirement for TEI conformance that information about publication\x{a}" ~
          "                           place, address, identifier, availability, and date be given in that\x{a}" ~
          "                           order, following the name of the publisher, distributor, or authority\x{a}" ~
          "                           concerned"
        ]
        "\x{a}" ~
        "            "
      ]
      "\x{a}" ~
      "         "
    ]
    sch:pattern [
      id =
        "digital_mishnah_witness-publicationStmt-linter-constraint-13"
      "\x{a}" ~
      "            "
      sch:rule [
        context = "tei:publicationStmt"
        "\x{a}" ~
        "               "
        sch:report [
          test = "not(tei:pubPlace/following-sibling::tei:address)"
          "It is a\x{a}" ~
          "                           requirement for TEI conformance that information about publication place,\x{a}" ~
          "                           address, identifier, availability, and date be given in that order,\x{a}" ~
          "                           following the name of the publisher, distributor, or authority\x{a}" ~
          "                           concerned"
        ]
        "\x{a}" ~
        "            "
      ]
      "\x{a}" ~
      "         "
    ]
    sch:pattern [
      id =
        "digital_mishnah_witness-publicationStmt-linter-constraint-14"
      "\x{a}" ~
      "            "
      sch:rule [
        context = "tei:publicationStmt"
        "\x{a}" ~
        "               "
        sch:report [
          test = "not(tei:address/following-sibling::tei:idno)"
          "It is a\x{a}" ~
          "                           requirement for TEI conformance that information about publication place,\x{a}" ~
          "                           address, identifier, availability, and date be given in that order,\x{a}" ~
          "                           following the name of the publisher, distributor, or authority\x{a}" ~
          "                           concerned"
        ]
        "\x{a}" ~
        "            "
      ]
      "\x{a}" ~
      "         "
    ]
    sch:pattern [
      id =
        "digital_mishnah_witness-publicationStmt-linter-constraint-15"
      "\x{a}" ~
      "            "
      sch:rule [
        context = "tei:publicationStmt"
        "\x{a}" ~
        "               "
        sch:report [
          test = "not(tei:idno/following-sibling::tei:availability)"
          "It is a\x{a}" ~
          "                           requirement for TEI conformance that information about publication place,\x{a}" ~
          "                           address, identifier, availability, and date be given in that order,\x{a}" ~
          "                           following the name of the publisher, distributor, or authority\x{a}" ~
          "                           concerned"
        ]
        "\x{a}" ~
        "            "
      ]
      "\x{a}" ~
      "         "
    ]
    sch:pattern [
      id =
        "digital_mishnah_witness-publicationStmt-linter-constraint-16"
      "\x{a}" ~
      "            "
      sch:rule [
        context = "tei:publicationStmt"
        "\x{a}" ~
        "               "
        sch:report [
          test = "not(tei:availability/following-sibling::tei:date)"
          "It is a\x{a}" ~
          "                           requirement for TEI conformance that information about publication place,\x{a}" ~
          "                           address, identifier, availability, and date be given in that order,\x{a}" ~
          "                           following the name of the publisher, distributor, or authority\x{a}" ~
          "                           concerned"
        ]
        "\x{a}" ~
        "            "
      ]
      "\x{a}" ~
      "         "
    ]
  ]
  element publicationStmt { mishnahw_att.global.attributes, empty }
mishnahw_idno =
  
  ## (identifier) supplies any form of identifier used to identify some object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized way. [2.2.4. Publication, Distribution, Licensing, etc. 2.2.5. The Series Statement 3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element idno {
    (text | mishnahw_model.gLike | mishnahw_idno)*,
    mishnahw_att.global.attributes,
    mishnahw_att.sortable.attributes,
    
    ## categorizes the identifier, for example as an ISBN, Social Security number, etc.
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_availability =
  
  ## supplies information about the availability of a text, for example any restrictions on its use or distribution, its copyright status, any licence applying to it, etc. [2.2.4. Publication, Distribution, Licensing, etc.]
  element availability {
    (mishnahw_model.availabilityPart | mishnahw_model.pLike)+,
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    
    ## supplies a code identifying the current availability of the text.
    [ a:defaultValue = "unknown" ]
    attribute status {
      
      ## the text is freely available.
      "free"
      | 
        ## the status of the text is unknown.
        "unknown"
      | 
        ## the text is not freely available.
        "restricted"
    }?,
    empty
  }
mishnahw_licence =
  
  ## contains information about a licence or other legal agreement applicable to the text. [2.2.4. Publication, Distribution, Licensing, etc.]
  element licence {
    mishnahw_macro.specialPara,
    mishnahw_att.global.attributes,
    mishnahw_att.pointing.attributes,
    mishnahw_att.datable.attributes,
    empty
  }
mishnahw_seriesStmt =
  
  ## (series statement) groups information about the series, if any, to which a publication belongs. [2.2.5. The Series Statement 2.2. The File Description]
  element seriesStmt {
    (mishnahw_model.pLike+
     | (mishnahw_title+,
        (mishnahw_editor | mishnahw_respStmt)*,
        (mishnahw_idno | mishnahw_biblScope)*)),
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_notesStmt =
  
  ## (notes statement) collects together any notes providing information about a text additional to that recorded in other parts of the bibliographic description. [2.2.6. The Notes Statement 2.2. The File Description]
  element notesStmt {
    ((mishnahw_model.noteLike | mishnahw_relatedItem)+)
    >> sch:pattern [
         id = "digital_mishnah_witness-notesStmt-linter-constraint-9"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:notesStmt"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "tei:note/tei:p"
             "The notesStmt is provided as a convenience\x{a}" ~
             "                           to permit a prose description of the physical manuscript. Please also\x{a}" ~
             "                           complete the structured elements for manuscript description within\x{a}" ~
             "                           sourceDesc "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_sourceDesc =
  
  ## (source description) describes the source from which an electronic text was derived or generated, typically a bibliographic description in the case of a digitized text, or a phrase such as "born digital" for a text which has no previous existence. [2.2.7. The Source Description]
  element sourceDesc {
    (mishnahw_model.biblLike | mishnahw_msDesc)+,
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    empty
  }
mishnahw_biblFull =
  
  ## (fully-structured bibliographic citation) contains a fully-structured bibliographic citation, in which all components of the TEI file description are present. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2. The File Description 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element biblFull {
    ((mishnahw_titleStmt,
      mishnahw_editionStmt?,
      mishnahw_extent?,
      mishnahw_publicationStmt,
      mishnahw_seriesStmt?,
      mishnahw_notesStmt?),
     mishnahw_sourceDesc*),
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    mishnahw_att.sortable.attributes,
    mishnahw_att.docStatus.attributes,
    empty
  }
mishnahw_encodingDesc =
  
  ## (encoding description) documents the relationship between an electronic text and the source or sources from which it was derived. [2.3. The Encoding Description 2.1.1. The TEI Header and Its Components]
  element encodingDesc {
    mishnahw_editorialDecl?,
    mishnahw_tagsDecl,
    (mishnahw_refsDecl, mishnahw_appInfo)?,
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_editorialDecl =
  
  ## (editorial practice declaration) provides details of editorial principles and practices applied during the encoding of a text. [2.3.3. The Editorial Practices Declaration 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element editorialDecl {
    (mishnahw_model.pLike | mishnahw_model.editorialDeclPart)+,
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    empty
  }
mishnahw_correction =
  
  ## (correction principles) states how and under what circumstances corrections have been made in the text. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element correction {
    mishnahw_model.pLike+,
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    
    ## indicates the degree of correction applied to the text.
    [ a:defaultValue = "unknown" ]
    attribute status {
      
      ## the text has been thoroughly checked and proofread.
      "high"
      | 
        ## the text has been checked at least once.
        "medium"
      | 
        ## the text has not been checked.
        "low"
      | 
        ## the correction status of the text is unknown.
        "unknown"
    }?,
    
    ## indicates the method adopted to indicate corrections within the text.
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## corrections have been made silently
      "silent"
      | 
        ## corrections have been represented using markup
        "markup"
    }?,
    empty
  }
mishnahw_normalization =
  
  ## indicates the extent of normalization or regularization of the original source carried out in converting it to electronic form. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element normalization {
    mishnahw_model.pLike+,
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    
    ## indicates a bibliographic description or other resource documenting the principles underlying the normalization carried out.
    attribute source { xsd:anyURI }?,
    
    ## indicates the method adopted to indicate normalizations within the text.
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## normalization made silently
      "silent"
      | 
        ## normalization represented using markup
        "markup"
    }?,
    empty
  }
mishnahw_quotation =
  
  ## specifies editorial practice adopted with respect to quotation marks in the original. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element quotation {
    (mishnahw_model.pLike*)
    >> sch:pattern [
         id =
           "digital_mishnah_witness-quotation-quotationContents-constraint-17"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:quotation"
           "\x{a}" ~
           "               "
           sch:report [
             test = "not(@marks) and not (tei:p)"
             "\x{a}" ~
             "On "
             sch:name [ ]
             ", either the @marks attribute should be used, or a paragraph of description provided"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    
    ## (quotation marks) indicates whether or not quotation marks have been retained as content within the text.
    attribute marks {
      
      ## no quotation marks have been retained
      "none"
      | 
        ## some quotation marks have been retained
        "some"
      | 
        ## all quotation marks have been retained
        "all"
    }?,
    empty
  }
mishnahw_hyphenation =
  
  ## summarizes the way in which hyphenation in a source text has been treated in an encoded version of it. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element hyphenation {
    mishnahw_model.pLike+,
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    
    ## (end-of-line) indicates whether or not end-of-line hyphenation has been retained in a text.
    [ a:defaultValue = "some" ]
    attribute eol {
      
      ## all end-of-line hyphenation has been retained, even though the lineation of the original may not have been.
      "all"
      | 
        ## end-of-line hyphenation has been retained in some cases.
        "some"
      | 
        ## all soft end-of-line hyphenation has been removed: any remaining end-of-line hyphenation should be retained.
        "hard"
      | 
        ## all end-of-line hyphenation has been removed: any remaining hyphenation occurred within the line.
        "none"
    }?,
    empty
  }
mishnahw_segmentation =
  
  ## describes the principles according to which the text has been segmented, for example into sentences, tone-units, graphemic strata, etc. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element segmentation {
    mishnahw_model.pLike+,
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    empty
  }
mishnahw_stdVals =
  
  ## (standard values) specifies the format used when standardized date or number values are supplied. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element stdVals {
    mishnahw_model.pLike+,
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    empty
  }
mishnahw_interpretation =
  
  ## describes the scope of any analytic or interpretive information added to the text in addition to the transcription. [2.3.3. The Editorial Practices Declaration]
  element interpretation {
    mishnahw_model.pLike+,
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    empty
  }
mishnahw_punctuation =
  
  ## specifies editorial practice adopted with respect to punctuation marks in the original. [2.3.3. The Editorial Practices Declaration 3.2. Treatment of Punctuation]
  element punctuation {
    mishnahw_model.pLike*,
    mishnahw_att.declarable.attributes,
    mishnahw_att.global.attributes,
    
    ## indicates whether or not punctation marks have been retained as content within the text.
    attribute marks {
      
      ## no punctuation marks have been retained
      "none"
      | 
        ## some punctuation marks have been retained
        "some"
      | 
        ## all punctuation marks have been retained
        "all"
    }?,
    
    ## indicates whether punctation marks have been captured inside or outside of an adjacent element.
    attribute placement {
      
      ## punctuation marks are captured inside adjacent elements
      "internal"
      | 
        ## punctuation marks are captured outside adjacent elements
        "external"
    }?,
    empty
  }
mishnahw_tagsDecl =
  
  ## (tagging declaration) provides detailed information about the tagging applied to a document. [2.3.4. The Tagging Declaration 2.3. The Encoding Description]
  element tagsDecl {
    (mishnahw_rendition*, mishnahw_namespace*),
    mishnahw_att.global.attributes,
    
    ## indicates whether the element types listed exhaustively include all those found within text, or represent only a subset.
    attribute partial { xsd:boolean }?,
    empty
  }
mishnahw_tagUsage =
  
  ## documents the usage of a specific element within a specified document. [2.3.4. The Tagging Declaration]
  element tagUsage {
    mishnahw_macro.limitedContent,
    mishnahw_att.global.attributes,
    
    ## (generic identifier) specifies the name (generic identifier) of the element indicated by the tag, within the namespace indicated by the parent namespace element.
    attribute gi { xsd:Name },
    
    ## specifies the number of occurrences of this element within the text.
    attribute occurs { xsd:nonNegativeInteger }?,
    
    ## (with unique identifier) specifies the number of occurrences of this element within the text which bear a distinct value for the global xml:id attribute.
    attribute withId { xsd:nonNegativeInteger }?,
    
    ## specifies the identifier of a rendition element which defines how this element was rendered in the source text.
    attribute render {
      list { xsd:anyURI+ }
    }?,
    empty
  }
mishnahw_namespace =
  
  ## supplies the formal name of the namespace to which the elements documented by its children belong. [2.3.4. The Tagging Declaration]
  element namespace {
    mishnahw_tagUsage+,
    mishnahw_att.global.attributes,
    
    ## specifies the full formal name of the namespace concerned.
    attribute name { xsd:anyURI },
    empty
  }
mishnahw_rendition =
  
  ## supplies information about the rendition or appearance of one or more elements in the source text. [2.3.4. The Tagging Declaration]
  element rendition {
    mishnahw_macro.limitedContent,
    mishnahw_att.global.attributes,
    mishnahw_att.styleDef.attributes,
    
    ## where CSS is used, provides a way of defining pseudo-elements, that is, styling rules applicable to specific sub-portions of an element.
    ## Sample values include: 1] first-line; 2] first-letter; 3] before; 4] after
    attribute scope {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## contains a selector or series of selectors specifying the elements to which the contained style description applies, expressed in the language specified in the scheme attribute.
    attribute selector { xsd:string }?,
    empty
  }
mishnahw_refsDecl =
  
  ## (references declaration) specifies how canonical references are constructed for this text. [2.3.6.3. Milestone Method 2.3. The Encoding Description 2.3.6. The Reference System Declaration]
  element refsDecl {
    (mishnahw_model.pLike+
     | mishnahw_cRefPattern+
     | mishnahw_refState+),
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    empty
  }
mishnahw_cRefPattern =
  
  ## (canonical reference pattern) specifies an expression and replacement pattern for transforming a canonical reference into a URI. [2.3.6.3. Milestone Method 2.3.6. The Reference System Declaration 2.3.6.2. Search-and-Replace Method]
  element cRefPattern {
    mishnahw_model.pLike*,
    mishnahw_att.global.attributes,
    mishnahw_att.patternReplacement.attributes,
    empty
  }
mishnahw_prefixDef =
  
  ## (prefixing scheme used in data.pointer values) defines a prefixing scheme used in data.pointer values, showing how abbreviated URIs using the scheme may be expanded into full URIs. [16.2.3. Using Abbreviated Pointers]
  element prefixDef {
    mishnahw_model.pLike*,
    mishnahw_att.global.attributes,
    mishnahw_att.patternReplacement.attributes,
    
    ## supplies a name which functions as the prefix for an abbreviated pointing scheme such as a private URI scheme. The prefix constitutes the text preceding the first colon.
    attribute ident { xsd:Name },
    empty
  }
mishnahw_listPrefixDef =
  
  ## (list of prefix definitions) contains a list of definitions of prefixing schemes used in data.pointer values, showing how abbreviated URIs using each scheme may be expanded into full URIs. [16.2.3. Using Abbreviated Pointers]
  element listPrefixDef {
    (mishnahw_prefixDef | mishnahw_listPrefixDef)+,
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_refState =
  
  ## (reference state) specifies one component of a canonical reference defined by the milestone method. [2.3.6.3. Milestone Method 2.3.6. The Reference System Declaration]
  element refState {
    empty,
    mishnahw_att.global.attributes,
    mishnahw_att.milestoneUnit.attributes,
    mishnahw_att.edition.attributes,
    
    ## specifies the fixed length of the reference component.
    attribute length { xsd:nonNegativeInteger }?,
    
    ## (delimiter) supplies a delimiting string following the reference component.
    attribute delim { xsd:string }?,
    empty
  }
mishnahw_taxonomy =
  
  ## defines a typology either implicitly, by means of a bibliographic citation, or explicitly by a structured taxonomy. [2.3.7. The Classification Declaration]
  element taxonomy {
    ((mishnahw_model.glossLike | mishnahw_model.descLike)*
     | (mishnahw_category | mishnahw_taxonomy)+
     | (mishnahw_model.biblLike,
        (mishnahw_category | mishnahw_taxonomy)*)),
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_category =
  
  ## contains an individual descriptive category, possibly nested within a superordinate category, within a user-defined taxonomy. [2.3.7. The Classification Declaration]
  element category {
    ((mishnahw_catDesc+
      | (mishnahw_model.descLike | mishnahw_model.glossLike)*),
     mishnahw_category*),
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_catDesc =
  
  ## (category description) describes some category within a taxonomy or text typology, either in the form of a brief prose description or in terms of the situational parameters used by the TEI formal textDesc. [2.3.7. The Classification Declaration]
  element catDesc {
    (text | mishnahw_model.limitedPhrase | mishnahw_model.catDescPart)*,
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_appInfo =
  
  ## (application information) records information about an application which has edited the TEI file. [2.3.10. The Application Information Element]
  element appInfo {
    mishnahw_model.applicationLike+,
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_application =
  
  ## provides information about an application which has acted upon the document. [2.3.10. The Application Information Element]
  element application {
    (mishnahw_model.labelLike+,
     (mishnahw_model.ptrLike* | mishnahw_model.pLike*)),
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.datable.attributes,
    
    ## supplies an identifier for the application, independent of its version number or display name.
    attribute ident { xsd:Name },
    
    ## supplies a version number for the application, independent of its identifier or display name.
    attribute version {
      xsd:token {
        pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}"
      }
    },
    empty
  }
mishnahw_handNote =
  
  ## (note on hand) describes a particular style or hand distinguished within a manuscript. [10.7.2. Writing, Decoration, and Other Notations]
  element handNote {
    mishnahw_macro.specialPara,
    mishnahw_att.global.attributes,
    mishnahw_att.handFeatures.attributes,
    empty
  }
mishnahw_abstract =
  
  ## contains a summary or formal abstract prefixed to an existing source document by the encoder. [2.4.4. Abstracts]
  element abstract {
    (mishnahw_model.pLike | mishnahw_model.listLike)+,
    mishnahw_att.global.attributes,
    mishnahw_att.source.attributes,
    empty
  }
mishnahw_creation =
  
  ## contains information about the creation of a text. [2.4.1. Creation 2.4. The Profile Description]
  element creation {
    (text | mishnahw_model.limitedPhrase | mishnahw_listChange)*,
    mishnahw_att.global.attributes,
    mishnahw_att.datable.attributes,
    empty
  }
mishnahw_langUsage =
  
  ## (language usage) describes the languages, sublanguages, registers, dialects, etc. represented within a text. [2.4.2. Language Usage 2.4. The Profile Description 15.3.2. Declarable Elements]
  element langUsage {
    (mishnahw_model.pLike+ | mishnahw_language+),
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    empty
  }
mishnahw_language =
  
  ## characterizes a single language or sublanguage used within a text. [2.4.2. Language Usage]
  element language {
    mishnahw_macro.phraseSeq.limited,
    mishnahw_att.global.attributes,
    
    ## (identifier) Supplies a language code constructed as defined in BCP 47 which is used to identify the language documented by this element, and which is referenced by the global xml:lang attribute.
    attribute ident {
      xsd:language
      | (
         ##
         "")
    },
    
    ## specifies the approximate percentage (by volume) of the text which uses this language.
    attribute usage { xsd:nonNegativeInteger }?,
    empty
  }
mishnahw_textClass =
  
  ## (text classification) groups information which describes the nature or topic of a text in terms of a standard classification scheme, thesaurus, etc. [2.4.3. The Text Classification]
  element textClass {
    (mishnahw_classCode | mishnahw_catRef | mishnahw_keywords)*,
    mishnahw_att.global.attributes,
    mishnahw_att.declarable.attributes,
    empty
  }
mishnahw_keywords =
  
  ## contains a list of keywords or phrases identifying the topic or nature of a text. [2.4.3. The Text Classification]
  element keywords {
    (mishnahw_term+ | mishnahw_list),
    mishnahw_att.global.attributes,
    
    ## identifies the controlled vocabulary within which the set of keywords concerned is defined identifies the classification scheme within which the set of categories concerned is defined, for example by a taxonomy element, or by some other resource.
    attribute scheme { xsd:anyURI }?,
    empty
  }
mishnahw_classCode =
  
  ## (classification code) contains the classification code used for this text in some standard classification system. [2.4.3. The Text Classification]
  element classCode {
    mishnahw_macro.phraseSeq.limited,
    mishnahw_att.global.attributes,
    
    ## identifies the classification system in use, as defined by for example by a taxonomy element, or some other resource.
    attribute scheme { xsd:anyURI },
    empty
  }
mishnahw_catRef =
  
  ## (category reference) specifies one or more defined categories within some taxonomy or text typology. [2.4.3. The Text Classification]
  element catRef {
    empty,
    mishnahw_att.global.attributes,
    mishnahw_att.pointing.attributes,
    
    ## identifies the classification scheme within which the set of categories concerned is defined, for example by a taxonomy element, or by some other resource.
    attribute scheme { xsd:anyURI }?,
    empty
  }
mishnahw_calendarDesc =
  
  ## (calendar description) contains a description of the calendar system used in any dating expression found in the text. [2.4. The Profile Description 2.4.5. Calendar Description]
  element calendarDesc {
    mishnahw_calendar+, mishnahw_att.global.attributes, empty
  }
mishnahw_calendar =
  
  ## describes a calendar or dating system used in a dating formula in the text. [2.4.5. Calendar Description]
  element calendar {
    mishnahw_model.pLike+,
    mishnahw_att.global.attributes,
    mishnahw_att.pointing.attributes,
    empty
  }
mishnahw_correspDesc =
  
  ## (correspondence
  ##     description) contains a description of the actions related to one act of correspondence. [2.4.6. Correspondence Description]
  element correspDesc {
    (mishnahw_model.correspDescPart+ | mishnahw_model.pLike+),
    mishnahw_att.declarable.attributes,
    mishnahw_att.canonical.attributes,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_correspAction =
  
  ## contains a structured description of the place, the name of a person/organization and the date related to the sending/receiving of a message or any other action related to the correspondence [2.4.6. Correspondence Description]
  element correspAction {
    (mishnahw_model.correspActionPart+ | mishnahw_model.pLike+),
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attribute.subtype,
    mishnahw_att.sortable.attributes,
    
    ## describes the nature of the action.
    ## Suggested values include: 1] sent; 2] received; 3] transmitted; 4] redirected; 5] forwarded
    attribute type {
      
      ## information concerning the sending or dispatch of a message
      "sent"
      | 
        ## information concerning the receipt of a message
        "received"
      | 
        ## information concerning the transmission of a message, i.e. between the dispatch and the next receipt, redirect or forwarding
        "transmitted"
      | 
        ## information concerning the redirection of an unread message.
        "redirected"
      | 
        ## information concerning the forwarding of a message.
        "forwarded"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_correspContext =
  
  ## (correspondence context) provides references to preceding or following correspondence related to this piece of correspondence. [2.4.6. Correspondence Description]
  element correspContext {
    mishnahw_model.correspContextPart+,
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_revisionDesc =
  
  ## (revision description) summarizes the revision history for a file. [2.6. The Revision Description 2.1.1. The TEI Header and Its Components]
  element revisionDesc {
    mishnahw_change+,
    mishnahw_att.global.attributes,
    mishnahw_att.docStatus.attributes,
    empty
  }
mishnahw_change =
  
  ## documents a change or set of changes made during the production of a source document, or during the revision of an electronic file. [2.6. The Revision Description 2.4.1. Creation 11.7. Identifying Changes and Revisions]
  element change {
    mishnahw_macro.specialPara,
    mishnahw_att.ascribed.attributes,
    mishnahw_att.datable.attributes,
    mishnahw_att.docStatus.attributes,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    
    ## points to one or more elements that belong to this change.
    attribute target {
      list { xsd:anyURI+ }
    }?,
    empty
  }
mishnahw_listChange =
  
  ## groups a number of change descriptions associated with either the creation of a source text or the revision of an encoded text. [2.6. The Revision Description 11.7. Identifying Changes and Revisions]
  element listChange {
    (mishnahw_listChange | mishnahw_change)+,
    mishnahw_att.global.attributes,
    mishnahw_att.sortable.attributes,
    mishnahw_att.typed.attributes,
    
    ## indicates whether the ordering of its child change elements is to be considered significant or not
    [ a:defaultValue = "true" ] attribute ordered { xsd:boolean }?,
    empty
  }
mishnahw_TEI =
  
  ## (TEI document) contains a single TEI-conformant document, combining a single TEI header with one or more members of the model.resourceLike class. Multiple TEI elements may be combined to form a teiCorpus element. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element TEI {
    (mishnahw_teiHeader, mishnahw_model.resourceLike+)
    >> sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
    >> sch:ns [ prefix = "xs" uri = "http://www.w3.org/2001/XMLSchema" ]
    >> sch:ns [
         prefix = "rng"
         uri = "http://relaxng.org/ns/structure/1.0"
       ],
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    
    ## specifies the major version number of the TEI Guidelines against which this document is valid.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
mishnahw_text =
  
  ## contains a single text of any kind, whether unitary or composite, for example a poem or drama, a collection of essays, a novel, a dictionary, or a corpus sample. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element text {
    (mishnahw_model.global*,
     (mishnahw_front, mishnahw_model.global*)?,
     (mishnahw_body | mishnahw_group),
     mishnahw_model.global*,
     (mishnahw_back, mishnahw_model.global*)?),
    mishnahw_att.global.attributes,
    mishnahw_att.declaring.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.written.attributes,
    empty
  }
mishnahw_body =
  
  ## (text body) contains the whole body of a single unitary text, excluding any front or back matter. [4. Default Text Structure]
  element body {
    (mishnahw_model.global*,
     (mishnahw_model.divTop,
      (mishnahw_model.global | mishnahw_model.divTop)*)?,
     (mishnahw_model.divGenLike,
      (mishnahw_model.global | mishnahw_model.divGenLike)*)?,
     ((mishnahw_model.divLike,
       (mishnahw_model.global | mishnahw_model.divGenLike)*)+
      | (mishnahw_model.div1Like,
         (mishnahw_model.global | mishnahw_model.divGenLike)*)+
      | ((mishnahw_model.common, mishnahw_model.global*)+,
         ((mishnahw_model.divLike,
           (mishnahw_model.global | mishnahw_model.divGenLike)*)+
          | (mishnahw_model.div1Like,
             (mishnahw_model.global | mishnahw_model.divGenLike)*)+)?)),
     (mishnahw_model.divBottom, mishnahw_model.global*)*),
    mishnahw_att.global.attributes,
    mishnahw_att.declaring.attributes,
    empty
  }
mishnahw_group =
  
  ## contains the body of a composite text, grouping together a sequence of distinct texts (or groups of such texts) which are regarded as a unit for some purpose, for example the collected works of an author, a sequence of prose essays, etc. [4. Default Text Structure 4.3.1. Grouped Texts 15.1. Varieties of Composite Text]
  element group {
    ((mishnahw_model.divTop | mishnahw_model.global)*,
     ((mishnahw_text | mishnahw_group),
      (mishnahw_text | mishnahw_group | mishnahw_model.global)*),
     mishnahw_model.divBottom*),
    mishnahw_att.global.attributes,
    mishnahw_att.declaring.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_floatingText =
  
  ## contains a single text of any kind, whether unitary or composite, which interrupts the text containing it at any point and after which the surrounding text resumes. [4.3.2. Floating Texts]
  element floatingText {
    (mishnahw_model.global*,
     (mishnahw_front, mishnahw_model.global*)?,
     (mishnahw_body | mishnahw_group),
     mishnahw_model.global*,
     (mishnahw_back, mishnahw_model.global*)?),
    mishnahw_att.global.attributes,
    mishnahw_att.declaring.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_div =
  
  ## (text division) contains a subdivision of the front, body, or back of a text. [4.1. Divisions of the Body]
  element div {
    ((mishnahw_model.divTop | mishnahw_model.global)*,
     ((((mishnahw_model.divLike | mishnahw_model.divGenLike),
        mishnahw_model.global*)+
       | ((mishnahw_model.common, mishnahw_model.global*)+,
          ((mishnahw_model.divLike | mishnahw_model.divGenLike),
           mishnahw_model.global*)*)),
      (mishnahw_model.divBottom, mishnahw_model.global*)*)?)
    >> sch:pattern [
         id =
           "digital_mishnah_witness-div-abstractModel-structure-l-constraint-18"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test = "ancestor::tei:l"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "digital_mishnah_witness-div-abstractModel-structure-p-constraint-19"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:p or ancestor::tei:ab and not(ancestor::tei:floatingText)"
             "\x{a}" ~
             "        Abstract model violation: p and ab may not contain higher-level structural elements such as div.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attributes,
    mishnahw_att.divLike.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.declaring.attributes,
    mishnahw_att.written.attributes,
    empty
  }
mishnahw_div1 =
  
  ## (level-1 text division) contains a first-level subdivision of the front, body, or back of a text. [4.1.2. Numbered Divisions]
  element div1 {
    ((mishnahw_model.divTop | mishnahw_model.global)*,
     ((((mishnahw_model.div2Like | mishnahw_model.divGenLike),
        mishnahw_model.global*)+
       | ((mishnahw_model.common, mishnahw_model.global*)+,
          ((mishnahw_model.div2Like | mishnahw_model.divGenLike),
           mishnahw_model.global*)*)),
      (mishnahw_model.divBottom, mishnahw_model.global*)*)?),
    mishnahw_att.global.attribute.n,
    mishnahw_att.global.attribute.xmllang,
    mishnahw_att.global.attribute.xmlbase,
    mishnahw_att.global.attribute.xmlspace,
    mishnahw_att.global.rendition.attribute.rend,
    mishnahw_att.global.rendition.attribute.style,
    mishnahw_att.global.rendition.attribute.rendition,
    mishnahw_att.global.linking.attribute.corresp,
    mishnahw_att.global.linking.attribute.synch,
    mishnahw_att.global.linking.attribute.sameAs,
    mishnahw_att.global.linking.attribute.copyOf,
    mishnahw_att.global.linking.attribute.next,
    mishnahw_att.global.linking.attribute.prev,
    mishnahw_att.global.linking.attribute.exclude,
    mishnahw_att.global.linking.attribute.select,
    mishnahw_att.global.facs.attribute.facs,
    mishnahw_att.global.change.attribute.change,
    mishnahw_att.global.responsibility.attribute.cert,
    mishnahw_att.global.responsibility.attribute.resp,
    mishnahw_att.divLike.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.declaring.attributes,
    
    ## (identifier) provides a unique identifier for the element bearing the attribute.
    attribute xml:id { xsd:ID },
    empty
  }
mishnahw_div2 =
  
  ## (level-2 text division) contains a second-level subdivision of the front, body, or back of a text. [4.1.2. Numbered Divisions]
  element div2 {
    ((mishnahw_model.divTop | mishnahw_model.global)*,
     ((((mishnahw_model.div3Like | mishnahw_model.divGenLike),
        mishnahw_model.global*)+
       | ((mishnahw_model.common, mishnahw_model.global*)+,
          ((mishnahw_model.div3Like | mishnahw_model.divGenLike),
           mishnahw_model.global*)*)),
      (mishnahw_model.divBottom, mishnahw_model.global*)*)?),
    mishnahw_att.global.attribute.n,
    mishnahw_att.global.attribute.xmllang,
    mishnahw_att.global.attribute.xmlbase,
    mishnahw_att.global.attribute.xmlspace,
    mishnahw_att.global.rendition.attribute.rend,
    mishnahw_att.global.rendition.attribute.style,
    mishnahw_att.global.rendition.attribute.rendition,
    mishnahw_att.global.linking.attribute.corresp,
    mishnahw_att.global.linking.attribute.synch,
    mishnahw_att.global.linking.attribute.sameAs,
    mishnahw_att.global.linking.attribute.copyOf,
    mishnahw_att.global.linking.attribute.next,
    mishnahw_att.global.linking.attribute.prev,
    mishnahw_att.global.linking.attribute.exclude,
    mishnahw_att.global.linking.attribute.select,
    mishnahw_att.global.facs.attribute.facs,
    mishnahw_att.global.change.attribute.change,
    mishnahw_att.global.responsibility.attribute.cert,
    mishnahw_att.global.responsibility.attribute.resp,
    mishnahw_att.divLike.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.declaring.attributes,
    
    ## (identifier) provides a unique identifier for the element bearing the attribute.
    attribute xml:id { xsd:ID },
    empty
  }
mishnahw_div3 =
  
  ## (level-3 text division) contains a third-level subdivision of the front, body, or back of a text. [4.1.2. Numbered Divisions]
  element div3 {
    ((mishnahw_model.divTop | mishnahw_model.global)*,
     ((((mishnahw_model.div4Like | mishnahw_model.divGenLike),
        mishnahw_model.global*)+
       | ((mishnahw_model.common, mishnahw_model.global*)+,
          ((mishnahw_model.div4Like | mishnahw_model.divGenLike),
           mishnahw_model.global*)*)),
      (mishnahw_model.divBottom, mishnahw_model.global*)*)?),
    mishnahw_att.global.attribute.n,
    mishnahw_att.global.attribute.xmllang,
    mishnahw_att.global.attribute.xmlbase,
    mishnahw_att.global.attribute.xmlspace,
    mishnahw_att.global.rendition.attribute.rend,
    mishnahw_att.global.rendition.attribute.style,
    mishnahw_att.global.rendition.attribute.rendition,
    mishnahw_att.global.linking.attribute.corresp,
    mishnahw_att.global.linking.attribute.synch,
    mishnahw_att.global.linking.attribute.sameAs,
    mishnahw_att.global.linking.attribute.copyOf,
    mishnahw_att.global.linking.attribute.next,
    mishnahw_att.global.linking.attribute.prev,
    mishnahw_att.global.linking.attribute.exclude,
    mishnahw_att.global.linking.attribute.select,
    mishnahw_att.global.facs.attribute.facs,
    mishnahw_att.global.change.attribute.change,
    mishnahw_att.global.responsibility.attribute.cert,
    mishnahw_att.global.responsibility.attribute.resp,
    mishnahw_att.divLike.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.declaring.attributes,
    
    ## (identifier) provides a unique identifier for the element bearing the attribute.
    attribute xml:id { xsd:ID },
    empty
  }
mishnahw_trailer =
  
  ## contains a closing title or footer appearing at the end of a division of a text. [4.2.4. Content of Textual Divisions 4.2. Elements Common to All Divisions]
  element trailer {
    (text
     | mishnahw_lg
     | mishnahw_model.gLike
     | mishnahw_model.phrase
     | mishnahw_model.inter
     | mishnahw_model.lLike
     | mishnahw_model.global)*,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_byline =
  
  ## contains the primary statement of responsibility given for a work on its title page or at the head or end of the work. [4.2.2. Openers and Closers 4.5. Front Matter]
  element byline {
    (text
     | mishnahw_model.gLike
     | mishnahw_model.phrase
     | mishnahw_docAuthor
     | mishnahw_model.global)*,
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_dateline =
  
  ## contains a brief description of the place, date, time, etc. of production of a letter, newspaper story, or other work, prefixed or suffixed to it as a kind of heading or trailer. [4.2.2. Openers and Closers]
  element dateline {
    (text
     | mishnahw_model.gLike
     | mishnahw_model.phrase
     | mishnahw_model.global
     | mishnahw_docDate)*,
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_argument =
  
  ## contains a formal list or prose description of the topics addressed by a subdivision of a text. [4.2. Elements Common to All Divisions 4.6. Title Pages]
  element argument {
    ((mishnahw_model.global | mishnahw_model.headLike)*,
     (mishnahw_model.common, mishnahw_model.global*)+),
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_epigraph =
  
  ## contains a quotation, anonymous or attributed, appearing at the start or end of a section or on a title page. [4.2.3. Arguments, Epigraphs, and Postscripts 4.2. Elements Common to All Divisions 4.6. Title Pages]
  element epigraph {
    (mishnahw_model.common | mishnahw_model.global)*,
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_opener =
  
  ## groups together dateline, byline, salutation, and similar phrases appearing as a preliminary group at the start of a division, especially of a letter. [4.2. Elements Common to All Divisions]
  element opener {
    (text
     | mishnahw_model.gLike
     | mishnahw_model.phrase
     | mishnahw_argument
     | mishnahw_byline
     | mishnahw_dateline
     | mishnahw_epigraph
     | mishnahw_salute
     | mishnahw_signed
     | mishnahw_model.global)*,
    mishnahw_att.global.attributes,
    mishnahw_att.written.attributes,
    empty
  }
mishnahw_closer =
  
  ## groups together salutations, datelines, and similar phrases appearing as a final group at the end of a division, especially of a letter. [4.2.2. Openers and Closers 4.2. Elements Common to All Divisions]
  element closer {
    (text
     | mishnahw_model.gLike
     | mishnahw_signed
     | mishnahw_dateline
     | mishnahw_salute
     | mishnahw_model.phrase
     | mishnahw_model.global)*,
    mishnahw_att.global.attributes,
    mishnahw_att.written.attributes,
    empty
  }
mishnahw_salute =
  
  ## (salutation) contains a salutation or greeting prefixed to a foreword, dedicatory epistle, or other division of a text, or the salutation in the closing of a letter, preface, etc. [4.2.2. Openers and Closers]
  element salute {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    mishnahw_att.written.attributes,
    empty
  }
mishnahw_signed =
  
  ## (signature) contains the closing salutation, etc., appended to a foreword, dedicatory epistle, or other division of a text. [4.2.2. Openers and Closers]
  element signed {
    mishnahw_macro.paraContent, mishnahw_att.global.attributes, empty
  }
mishnahw_postscript =
  
  ## contains a postscript, e.g. to a letter. [4.2. Elements Common to All Divisions]
  element postscript {
    ((mishnahw_model.global | mishnahw_model.divTopPart)*,
     mishnahw_model.common,
     (mishnahw_model.global | mishnahw_model.common)*,
     (mishnahw_model.divBottomPart, mishnahw_model.global*)*),
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_titlePage =
  
  ## (title page) contains the title page of a text, appearing within the front or back matter. [4.6. Title Pages]
  element titlePage {
    (mishnahw_model.global*,
     mishnahw_model.titlepagePart,
     (mishnahw_model.titlepagePart | mishnahw_model.global)*),
    mishnahw_att.global.attributes,
    
    ## classifies the title page according to any convenient typology.
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_docTitle =
  
  ## (document title) contains the title of a document, including all its constituents, as given on a title page. [4.6. Title Pages]
  element docTitle {
    (mishnahw_model.global*,
     (mishnahw_titlePart, mishnahw_model.global*)+),
    mishnahw_att.global.attributes,
    mishnahw_att.canonical.attributes,
    empty
  }
mishnahw_titlePart =
  
  ## contains a subsection or division of the title of a work, as indicated on a title page. [4.6. Title Pages]
  element titlePart {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    
    ## specifies the role of this subdivision of the title.
    ## Suggested values include: 1] main; 2] sub(subordinate) ; 3] alt(alternate) ; 4] short; 5] desc(descriptive) 
    [ a:defaultValue = "main" ]
    attribute type {
      
      ## main title of the work
      "main"
      | 
        ## (subordinate) subtitle of the work
        "sub"
      | 
        ## (alternate) alternative title of the work
        "alt"
      | 
        ## abbreviated form of title
        "short"
      | 
        ## (descriptive) descriptive paraphrase of the work
        "desc"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_docAuthor =
  
  ## (document author) contains the name of the author of the document, as given on the title page (often but not always contained in a byline). [4.6. Title Pages]
  element docAuthor {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.canonical.attributes,
    empty
  }
mishnahw_imprimatur =
  
  ## contains a formal statement authorizing the publication of a work, sometimes required to appear on a title page or its verso. [4.6. Title Pages]
  element imprimatur {
    mishnahw_macro.paraContent, mishnahw_att.global.attributes, empty
  }
mishnahw_docEdition =
  
  ## (document edition) contains an edition statement as presented on a title page of a document. [4.6. Title Pages]
  element docEdition {
    mishnahw_macro.paraContent, mishnahw_att.global.attributes, empty
  }
mishnahw_docImprint =
  
  ## (document imprint) contains the imprint statement (place and date of publication, publisher name), as given (usually) at the foot of a title page. [4.6. Title Pages]
  element docImprint {
    (text
     | mishnahw_model.gLike
     | mishnahw_model.phrase
     | mishnahw_pubPlace
     | mishnahw_docDate
     | mishnahw_publisher
     | mishnahw_model.global)*,
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_docDate =
  
  ## (document date) contains the date of a document, as given on a title page or in a dateline. [4.6. Title Pages]
  element docDate {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    
    ## gives the value of the date in standard form, i.e. YYYY-MM-DD.
    attribute when {
      xsd:date
      | xsd:gYear
      | xsd:gMonth
      | xsd:gDay
      | xsd:gYearMonth
      | xsd:gMonthDay
      | xsd:time
      | xsd:dateTime
    }?,
    empty
  }
mishnahw_front =
  
  ## (front matter) contains any prefatory matter (headers, abstracts, title page, prefaces, dedications, etc.) found at the start of a document, before the main body. [4.6. Title Pages 4. Default Text Structure]
  element front {
    ((mishnahw_model.frontPart
      | mishnahw_model.pLike
      | mishnahw_model.pLike.front
      | mishnahw_model.global)*,
     (((mishnahw_model.div1Like,
        (mishnahw_model.div1Like
         | mishnahw_model.frontPart
         | mishnahw_model.global)*)
       | (mishnahw_model.divLike,
          (mishnahw_model.divLike
           | mishnahw_model.frontPart
           | mishnahw_model.global)*)),
      (mishnahw_model.divBottom,
       (mishnahw_model.divBottom | mishnahw_model.global)*)?)?),
    mishnahw_att.global.attributes,
    mishnahw_att.declaring.attributes,
    empty
  }
mishnahw_back =
  
  ## (back matter) contains any appendixes, etc. following the main part of a text. [4.7. Back Matter 4. Default Text Structure]
  element back {
    ((mishnahw_model.frontPart
      | mishnahw_model.pLike.front
      | mishnahw_model.pLike
      | mishnahw_model.listLike
      | mishnahw_model.global)*,
     ((mishnahw_model.div1Like,
       (mishnahw_model.frontPart
        | mishnahw_model.div1Like
        | mishnahw_model.global)*)
      | (mishnahw_model.divLike,
         (mishnahw_model.frontPart
          | mishnahw_model.divLike
          | mishnahw_model.global)*))?,
     (mishnahw_model.divBottomPart,
      (mishnahw_model.divBottomPart | mishnahw_model.global)*)?),
    mishnahw_att.global.attributes,
    mishnahw_att.declaring.attributes,
    empty
  }
mishnahw_att.global.facs.attributes =
  mishnahw_att.global.facs.attribute.facs
mishnahw_att.global.facs.attribute.facs =
  
  ## (facsimile) points to all or part of an image which corresponds with the content of the element.
  attribute facs {
    list { xsd:anyURI+ }
  }?
mishnahw_att.global.change.attributes =
  mishnahw_att.global.change.attribute.change
mishnahw_att.global.change.attribute.change =
  
  ## points to one or more change elements documenting a state or revision campaign to which the element bearing this attribute and its children have been assigned by the encoder.
  attribute change {
    list { xsd:anyURI+ }
  }?
mishnahw_att.coordinated.attributes =
  mishnahw_att.coordinated.attribute.start,
  mishnahw_att.coordinated.attribute.ulx,
  mishnahw_att.coordinated.attribute.uly,
  mishnahw_att.coordinated.attribute.lrx,
  mishnahw_att.coordinated.attribute.lry,
  mishnahw_att.coordinated.attribute.points
mishnahw_att.coordinated.attribute.start =
  
  ## indicates the element within a transcription of the text containing at least the start of the writing represented by this zone or surface.
  attribute start { xsd:anyURI }?
mishnahw_att.coordinated.attribute.ulx =
  
  ## gives the x coordinate value for the upper left corner of a rectangular space.
  attribute ulx {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
mishnahw_att.coordinated.attribute.uly =
  
  ## gives the y coordinate value for the upper left corner of a rectangular space.
  attribute uly {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
mishnahw_att.coordinated.attribute.lrx =
  
  ## gives the x coordinate value for the lower right corner of a rectangular space.
  attribute lrx {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
mishnahw_att.coordinated.attribute.lry =
  
  ## gives the y coordinate value for the lower right corner of a rectangular space.
  attribute lry {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
mishnahw_att.coordinated.attribute.points =
  
  ## identifies a two dimensional area within the bounding box specified by the other attributes by means of a series of pairs of numbers, each of which gives the x,y coordinates of a point on a line enclosing the area.
  attribute points {
    list {
      xsd:token { pattern = "(\-?[0-9]+\.?[0-9]*,\-?[0-9]+\.?[0-9]*)" },
      xsd:token { pattern = "(\-?[0-9]+\.?[0-9]*,\-?[0-9]+\.?[0-9]*)" },
      xsd:token { pattern = "(\-?[0-9]+\.?[0-9]*,\-?[0-9]+\.?[0-9]*)" },
      xsd:token { pattern = "(\-?[0-9]+\.?[0-9]*,\-?[0-9]+\.?[0-9]*)" }*
    }
  }?
mishnahw_sourceDoc =
  
  ## contains a transcription or other representation of a single source document potentially forming part of a dossier génétique or collection of sources. [11.1. Digital Facsimiles 11.2.2. Embedded Transcription]
  element sourceDoc {
    (mishnahw_model.global
     | mishnahw_model.graphicLike
     | mishnahw_surfaceGrp)+,
    mishnahw_att.global.attributes,
    mishnahw_att.declaring.attributes,
    empty
  }
mishnahw_surfaceGrp =
  
  ## defines any kind of useful grouping of written surfaces, for example the recto and verso of a single leaf, which the encoder wishes to treat as a single unit. [11.1. Digital Facsimiles]
  element surfaceGrp {
    (mishnahw_model.global | mishnahw_surfaceGrp)+,
    mishnahw_att.global.attributes,
    mishnahw_att.declaring.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_damage =
  
  ## contains an area of damage to the text witness. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element damage {
    (text
     | mishnahw_model.pPart.editorial
     | mishnahw_c
     | mishnahw_del
     | mishnahw_gap
     | mishnahw_lb
     | mishnahw_note
     | mishnahw_unclear
     | mishnahw_seg
     | mishnahw_surplus
     | mishnahw_metamark
     | mishnahw_pc
     | mishnahw_label)*,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.damaged.attributes,
    empty
  }
mishnahw_damageSpan =
  
  ## (damaged span of text) marks the beginning of a longer sequence of text which is damaged in some way but still legible. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element damageSpan {
    empty
    >> sch:pattern [
         id = "digital_mishnah_witness-damageSpan-spanTo-constraint-10"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:damageSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "\x{a}" ~
             "The @spanTo attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "digital_mishnah_witness-damageSpan-spanTo_fr-constraint-11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:damageSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attribute.xmlid,
    mishnahw_att.global.attribute.n,
    mishnahw_att.global.attribute.xmllang,
    mishnahw_att.global.attribute.xmlbase,
    mishnahw_att.global.attribute.xmlspace,
    mishnahw_att.global.rendition.attribute.rend,
    mishnahw_att.global.rendition.attribute.style,
    mishnahw_att.global.rendition.attribute.rendition,
    mishnahw_att.global.linking.attribute.synch,
    mishnahw_att.global.linking.attribute.sameAs,
    mishnahw_att.global.linking.attribute.copyOf,
    mishnahw_att.global.linking.attribute.next,
    mishnahw_att.global.linking.attribute.prev,
    mishnahw_att.global.linking.attribute.exclude,
    mishnahw_att.global.linking.attribute.select,
    mishnahw_att.global.facs.attribute.facs,
    mishnahw_att.global.change.attribute.change,
    mishnahw_att.global.responsibility.attribute.cert,
    mishnahw_att.global.responsibility.attribute.resp,
    mishnahw_att.damaged.attributes,
    mishnahw_att.typed.attributes,
    
    ## (corresponds) points to elements that correspond to the current element in some way.
    attribute corresp {
      list { xsd:anyURI+ }
    },
    
    ## indicates the end of a span initiated by the element bearing this attribute.
    attribute spanTo { xsd:anyURI }
    >> sch:pattern [
         id =
           "digital_mishnah_witness-damageSpan-spanTo-spanTo-2-constraint-10"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@spanTo]"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "id(substring(@spanTo,2)) and following::*[@xml:id=substring(current()/@spanTo,2)]"
             "\x{a}" ~
             "The element indicated by @spanTo ("
             sch:value-of [ select = "@spanTo" ]
             ") must follow the current element "
             sch:name [ ]
             "\x{a}" ~
             "                  "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
mishnahw_fw =
  
  ## (forme work) contains a running head (e.g. a header, footer), catchword, or similar material appearing on the current page. [11.6. Headers, Footers, and Similar Matter]
  element fw {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.placement.attributes,
    mishnahw_att.written.attributes,
    
    ## classifies the material encoded according to some useful typology.
    ## Sample values include: 1] header; 2] footer; 3] pageNum(page number) ; 4] lineNum(line number) ; 5] sig(signature) ; 6] catch(catchword) 
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_handNotes =
  
  ## contains one or more handNote elements documenting the different hands identified within the source texts. [11.3.2.1. Document Hands]
  element handNotes {
    mishnahw_handNote+, mishnahw_att.global.attributes, empty
  }
mishnahw_handShift =
  
  ## marks the beginning of a sequence of text written in a new hand, or the beginning of a scribal stint. [11.3.2.1. Document Hands]
  element handShift {
    empty,
    mishnahw_att.global.attributes,
    mishnahw_att.handFeatures.attributes,
    mishnahw_att.source.attributes,
    
    ## indicates a handNote element describing the hand concerned.
    attribute new { xsd:anyURI }?,
    empty
  }
mishnahw_am =
  
  ## (abbreviation marker) contains a sequence of letters or signs present in an abbreviation which are omitted or replaced in the expanded form of the abbreviation. [11.3.1.2. Abbreviation and Expansion]
  element am {
    (text
     | mishnahw_model.gLike
     | mishnahw_model.pPart.transcriptional)*,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.editLike.attributes,
    empty
  }
mishnahw_restore =
  
  ## indicates restoration of text to an earlier state by cancellation of an editorial or authorial marking or instruction. [11.3.1.6. Cancellation of Deletions and Other Markings]
  element restore {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    mishnahw_att.transcriptional.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_space =
  
  ## indicates the location of a significant space in the text. [11.5.1. Space]
  element space {
    (mishnahw_model.descLike | mishnahw_model.certLike)*,
    mishnahw_att.global.attribute.xmlid,
    mishnahw_att.global.attribute.n,
    mishnahw_att.global.attribute.xmllang,
    mishnahw_att.global.attribute.xmlbase,
    mishnahw_att.global.attribute.xmlspace,
    mishnahw_att.global.rendition.attribute.rend,
    mishnahw_att.global.rendition.attribute.style,
    mishnahw_att.global.rendition.attribute.rendition,
    mishnahw_att.global.linking.attribute.corresp,
    mishnahw_att.global.linking.attribute.synch,
    mishnahw_att.global.linking.attribute.sameAs,
    mishnahw_att.global.linking.attribute.copyOf,
    mishnahw_att.global.linking.attribute.next,
    mishnahw_att.global.linking.attribute.prev,
    mishnahw_att.global.linking.attribute.exclude,
    mishnahw_att.global.linking.attribute.select,
    mishnahw_att.global.facs.attribute.facs,
    mishnahw_att.global.change.attribute.change,
    mishnahw_att.global.responsibility.attribute.cert,
    mishnahw_att.typed.attributes,
    mishnahw_att.dimensions.attributes,
    mishnahw_att.source.attributes,
    
    ## (responsible party) (responsible party) indicates the individual responsible for identifying and measuring the space
    attribute resp {
      list { xsd:anyURI+ }
    }?,
    
    ## (dimension) indicates whether the space is horizontal or vertical.
    attribute dim {
      
      ## the space is horizontal.
      "horizontal"
      | 
        ## the space is vertical.
        "vertical"
    }?,
    empty
  }
mishnahw_subst =
  
  ## (substitution) groups one or more deletions with one or more additions when the combination is to be regarded as a single intervention in the text. [11.3.1.5. Substitutions]
  element subst {
    ((mishnahw_add | mishnahw_del | mishnahw_model.milestoneLike)+)
    >> sch:pattern [
         id =
           "digital_mishnah_witness-subst-substContents1-constraint-13"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:subst"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "child::tei:add and child::tei:del"
             "\x{a}" ~
             "                  "
             sch:name [ ]
             " must have at least one child add and at least one child del"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attributes,
    mishnahw_att.transcriptional.attributes,
    empty
  }
mishnahw_substJoin =
  
  ## (substitution join) identifies a series of possibly fragmented additions, deletions or other revisions on a manuscript that combine to make up a single intervention in the text [11.3.1.5. Substitutions]
  element substJoin {
    (mishnahw_model.descLike | mishnahw_model.certLike)*,
    mishnahw_att.global.attributes,
    mishnahw_att.pointing.attributes,
    mishnahw_att.transcriptional.attributes,
    empty
  }
mishnahw_supplied =
  
  ## signifies text supplied by the transcriber or editor for any reason; for example because the original cannot be read due to physical damage, or because of an obvious omission by the author or scribe. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element supplied {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    mishnahw_att.editLike.attributes,
    
    ## one or more words indicating why the text has had to be supplied, e.g. overbinding, faded-ink, lost-folio, omitted-in-original.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
mishnahw_surplus =
  
  ## marks text present in the source which the editor believes to be superfluous or redundant. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element surplus {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    mishnahw_att.editLike.attributes,
    
    ## one or more words indicating why this text is believed to be superfluous, e.g. repeated, interpolated etc.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
mishnahw_secl =
  
  ## (secluded text) Secluded. Marks text present in the source which the editor believes to be genuine but out of its original place (which is unknown). [11.3.1.7. Text Omitted from or Supplied in the Transcription]
  element secl {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    mishnahw_att.editLike.attributes,
    
    ## one or more words indicating why this text has been secluded, e.g. interpolated etc.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
mishnahw_line =
  
  ## contains the transcription of a topographic line in the source document [11.2.2. Embedded Transcription]
  element line {
    (text
     | mishnahw_model.global
     | mishnahw_model.gLike
     | mishnahw_model.linePart)*,
    mishnahw_att.typed.attributes,
    mishnahw_att.global.attributes,
    mishnahw_att.coordinated.attributes,
    mishnahw_att.written.attributes,
    empty
  }
mishnahw_listTranspose =
  
  ## supplies a list of transpositions, each of which is indicated at some point in a document typically by means of metamarks. [11.3.4.5. Transpositions]
  element listTranspose {
    mishnahw_transpose+, mishnahw_att.global.attributes, empty
  }
mishnahw_metamark =
  
  ## contains or describes any kind of graphic or written signal within a document the function of which is to determine how it should be read rather than forming part of the actual content of the document. [11.3.4.2. Metamarks]
  element metamark {
    mishnahw_macro.specialPara,
    mishnahw_att.spanning.attributes,
    mishnahw_att.placement.attributes,
    mishnahw_att.global.attributes,
    
    ## describes the function (for example status, insertion, deletion, transposition) of the metamark.
    attribute function {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## identifies one or more elements to which the metamark applies.
    attribute target {
      list { xsd:anyURI+ }
    }?,
    empty
  }
mishnahw_mod =
  
  ## represents any kind of modification identified within a single document. [11.3.4.1. Generic Modification]
  element mod {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    mishnahw_att.transcriptional.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.spanning.attributes,
    empty
  }
mishnahw_redo =
  
  ## indicates one or more cancelled interventions in a document which have subsequently been marked as reaffirmed or repeated. [11.3.4.4. Confirmation, Cancellation, and Reinstatement of Modifications]
  element redo {
    empty,
    mishnahw_att.global.attributes,
    mishnahw_att.spanning.attributes,
    mishnahw_att.transcriptional.attributes,
    
    ## points to one or more elements representing the interventions which are being reasserted.
    attribute target {
      list { xsd:anyURI+ }
    }?,
    empty
  }
mishnahw_retrace =
  
  ## contains a sequence of writing which has been retraced, for example by over-inking, to clarify or fix it. [11.3.4.3. Fixation and Clarification]
  element retrace {
    mishnahw_macro.paraContent,
    mishnahw_att.global.attributes,
    mishnahw_att.spanning.attributes,
    mishnahw_att.transcriptional.attributes,
    empty
  }
mishnahw_transpose =
  
  ## describes a single textual transposition as an ordered list of at least two pointers specifying the order in which the elements indicated should be re-combined. [11.3.4.5. Transpositions]
  element transpose {
    (mishnahw_ptr, mishnahw_ptr+), mishnahw_att.global.attributes, empty
  }
mishnahw_undo =
  
  ## indicates one or more marked-up interventions in a document which have subsequently been marked for cancellation. [11.3.4.4. Confirmation, Cancellation, and Reinstatement of Modifications]
  element undo {
    empty,
    mishnahw_att.global.attributes,
    mishnahw_att.spanning.attributes,
    mishnahw_att.transcriptional.attributes,
    
    ## points to one or more elements representing the interventions which are to be reverted or undone.
    attribute target {
      list { xsd:anyURI+ }
    }?,
    empty
  }
mishnahw_att.global.linking.attributes =
  mishnahw_att.global.linking.attribute.corresp,
  mishnahw_att.global.linking.attribute.synch,
  mishnahw_att.global.linking.attribute.sameAs,
  mishnahw_att.global.linking.attribute.copyOf,
  mishnahw_att.global.linking.attribute.next,
  mishnahw_att.global.linking.attribute.prev,
  mishnahw_att.global.linking.attribute.exclude,
  mishnahw_att.global.linking.attribute.select
mishnahw_att.global.linking.attribute.corresp =
  
  ## (corresponds) points to elements that correspond to the current element in some way.
  attribute corresp {
    list { xsd:anyURI+ }
  }?
mishnahw_att.global.linking.attribute.synch =
  
  ## (synchronous) points to elements that are synchronous with the current element.
  attribute synch {
    list { xsd:anyURI+ }
  }?
mishnahw_att.global.linking.attribute.sameAs =
  
  ## points to an element that is the same as the current element.
  attribute sameAs { xsd:anyURI }?
mishnahw_att.global.linking.attribute.copyOf =
  
  ## points to an element of which the current element is a copy.
  attribute copyOf { xsd:anyURI }?
mishnahw_att.global.linking.attribute.next =
  
  ## points to the next element of a virtual aggregate of which the current element is part.
  attribute next { xsd:anyURI }?
mishnahw_att.global.linking.attribute.prev =
  
  ## (previous) points to the previous element of a virtual aggregate of which the current element is part.
  attribute prev { xsd:anyURI }?
mishnahw_att.global.linking.attribute.exclude =
  
  ## points to elements that are in exclusive alternation with the current element.
  attribute exclude {
    list { xsd:anyURI+ }
  }?
mishnahw_att.global.linking.attribute.select =
  
  ## selects one or more alternants; if one alternant is selected, the ambiguity or uncertainty is marked as resolved. If more than one alternant is selected, the degree of ambiguity or uncertainty is marked as reduced by the number of alternants not selected.
  attribute select {
    list { xsd:anyURI+ }
  }?
mishnahw_ab =
  
  ## (anonymous block) contains any arbitrary component-level unit of text, acting as an anonymous container for phrase or inter level elements analogous to, but without the semantic baggage of, a paragraph. [16.3. Blocks, Segments, and Anchors]
  element ab {
    mishnahw_macro.paraContent
    >> sch:pattern [
         id =
           "digital_mishnah_witness-ab-abstractModel-structure-p-constraint-20"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ab"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:p or ancestor::tei:ab)          and not(parent::tei:exemplum         |parent::tei:item         |parent::tei:note         |parent::tei:q         |parent::tei:quote         |parent::tei:remarks         |parent::tei:said         |parent::tei:sp         |parent::tei:stage         |parent::tei:cell         |parent::tei:figure)"
             "\x{a}" ~
             "        Abstract model violation: ab may not contain paragraphs or other ab elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "digital_mishnah_witness-ab-abstractModel-structure-l-constraint-21"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ab"
           "\x{a}" ~
           "               "
           sch:report [
             test = "ancestor::tei:l or ancestor::tei:lg"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level divisions such as p or ab.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attribute.n,
    mishnahw_att.global.attribute.xmllang,
    mishnahw_att.global.attribute.xmlbase,
    mishnahw_att.global.attribute.xmlspace,
    mishnahw_att.global.rendition.attribute.rend,
    mishnahw_att.global.rendition.attribute.style,
    mishnahw_att.global.rendition.attribute.rendition,
    mishnahw_att.global.linking.attribute.corresp,
    mishnahw_att.global.linking.attribute.synch,
    mishnahw_att.global.linking.attribute.sameAs,
    mishnahw_att.global.linking.attribute.copyOf,
    mishnahw_att.global.linking.attribute.next,
    mishnahw_att.global.linking.attribute.prev,
    mishnahw_att.global.linking.attribute.exclude,
    mishnahw_att.global.linking.attribute.select,
    mishnahw_att.global.facs.attribute.facs,
    mishnahw_att.global.change.attribute.change,
    mishnahw_att.global.responsibility.attribute.cert,
    mishnahw_att.global.responsibility.attribute.resp,
    mishnahw_att.typed.attributes,
    mishnahw_att.declaring.attributes,
    mishnahw_att.fragmentable.attributes,
    mishnahw_att.written.attributes,
    
    ## (identifier) provides a unique identifier for the element bearing the attribute.
    attribute xml:id { xsd:ID },
    empty
  }
mishnahw_anchor =
  
  ## (anchor point) attaches an identifier to a point within a text, whether or not it corresponds with a textual element. [8.4.2. Synchronization and Overlap 16.4. Correspondence and Alignment]
  element anchor {
    empty,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_seg =
  
  ## (arbitrary segment) represents any segmentation of text below the chunk level. [16.3. Blocks, Segments, and Anchors 6.2. Components of the Verse Line 7.2.5. Speech Contents]
  element seg {
    (text
     | mishnahw_model.pPart.transcriptional
     | mishnahw_model.milestoneLike
     | mishnahw_model.pPart.editorial
     | mishnahw_model.segLike
     | mishnahw_listTranspose
     | mishnahw_metamark
     | mishnahw_note)*,
    mishnahw_att.global.attributes,
    mishnahw_att.segLike.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.source.attributes,
    mishnahw_att.written.attributes,
    empty
  }
mishnahw_join =
  
  ## identifies a possibly fragmented segment of text, by pointing at the possibly discontiguous elements which compose it. [16.7. Aggregation]
  element join {
    ((mishnahw_model.descLike | mishnahw_model.certLike)*)
    >> sch:pattern [
         id = "digital_mishnah_witness-join-joinTargets3-constraint-14"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:join"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "contains(@target,' ')"
             "\x{a}" ~
             "You must supply at least two values for @target on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attributes,
    mishnahw_att.pointing.attributes,
    mishnahw_att.typed.attributes,
    
    ## specifies the name of an element which this aggregation may be understood to represent.
    attribute result { xsd:Name }?,
    
    ## indicates whether the targets to be joined include the entire element indicated (the entire subtree including its root), or just the children of the target (the branches of the subtree).
    [ a:defaultValue = "root" ]
    attribute scope {
      
      ## the rooted subtrees indicated by the target attribute are joined, each subtree become a child of the virtual element created by the join
      "root"
      | 
        ## the children of the subtrees indicated by the target attribute become the children of the virtual element (i.e. the roots of the subtrees are discarded)
        "branches"
    }?,
    empty
  }
mishnahw_joinGrp =
  
  ## (join group) groups a collection of join elements and possibly pointers. [16.7. Aggregation]
  element joinGrp {
    (mishnahw_model.glossLike*, (mishnahw_join | mishnahw_ptr)+),
    mishnahw_att.global.attributes,
    mishnahw_att.pointing.group.attributes,
    
    ## supplies the default value for the result on each join included within the group.
    attribute result { xsd:Name }?,
    empty
  }
mishnahw_att.msExcerpt.attributes =
  mishnahw_att.msExcerpt.attribute.defective
mishnahw_att.msExcerpt.attribute.defective =
  
  ## indicates whether the passage being quoted is defective, i.e. incomplete through loss or damage.
  [ a:defaultValue = "false" ]
  attribute defective {
    xsd:boolean
    | (
       ##
       "unknown"
       | 
         ##
         "inapplicable")
  }?
mishnahw_msDesc =
  
  ## (manuscript description) contains a description of a single identifiable manuscript or other text-bearing object. [10.1. Overview]
  element msDesc {
    (mishnahw_msIdentifier,
     mishnahw_model.headLike*,
     (mishnahw_model.pLike+
      | (mishnahw_msContents?,
         mishnahw_physDesc?,
         mishnahw_additional?,
         empty))),
    mishnahw_att.global.attributes,
    mishnahw_att.sortable.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.declaring.attributes,
    empty
  }
mishnahw_dimensions =
  
  ## contains a dimensional specification. [10.3.4. Dimensions]
  element dimensions {
    ((mishnahw_dim | mishnahw_model.dimLike)*)
    >> sch:pattern [
         id =
           "digital_mishnah_witness-dimensions-duplicateDim-constraint-22"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:width)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "digital_mishnah_witness-dimensions-duplicateDim-constraint-23"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:height)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "digital_mishnah_witness-dimensions-duplicateDim-constraint-24"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:depth)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attributes,
    mishnahw_att.dimensions.attributes,
    
    ## indicates which aspect of the object is being measured.
    ## Sample values include: 1] leaves; 2] ruled; 3] pricked; 4] written; 5] miniatures; 6] binding; 7] box
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_dim =
  
  ## contains any single measurement forming part of a dimensional specification of some sort. [10.3.4. Dimensions]
  element dim {
    mishnahw_macro.xtext,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.dimensions.attributes,
    empty
  }
mishnahw_height =
  
  ## contains a measurement measured along the axis at right angles to the bottom of the written surface, i.e. parallel to the spine for a codex or book. [10.3.4. Dimensions]
  element height {
    mishnahw_macro.xtext,
    mishnahw_att.global.attributes,
    mishnahw_att.dimensions.attributes,
    empty
  }
mishnahw_width =
  
  ## contains a measurement measured along the axis parallel to the bottom of the written surface, i.e. perpendicular to the spine of a book or codex. [10.3.4. Dimensions]
  element width {
    mishnahw_macro.xtext,
    mishnahw_att.global.attributes,
    mishnahw_att.dimensions.attributes,
    empty
  }
mishnahw_locus =
  
  ## defines a location within a manuscript or manuscript part, usually as a (possibly discontinuous) sequence of folio references. [10.3.5. References to Locations within a Manuscript]
  element locus {
    mishnahw_macro.xtext,
    mishnahw_att.global.attributes,
    mishnahw_att.pointing.attributes,
    
    ## identifies the foliation scheme in terms of which the location is being specified by pointing to some foliation element defining it, or to some other equivalent resource.
    attribute scheme { xsd:anyURI }?,
    
    ## specifies the starting point of the location in a normalized form, typically a page number.
    attribute from {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## specifies the end-point of the location in a normalized form, typically as a page number.
    attribute to {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_locusGrp =
  
  ## groups a number of locations which together form a distinct but discontinuous item within a manuscript or manuscript part, according to a specific foliation. [10.3.5. References to Locations within a Manuscript]
  element locusGrp {
    mishnahw_locus+,
    mishnahw_att.global.attributes,
    
    ## identifies the foliation scheme in terms of which all the locations contained by the group are specified by pointing to some foliation element defining it, or to some other equivalent resource.
    attribute scheme { xsd:anyURI }?,
    empty
  }
mishnahw_msIdentifier =
  
  ## (manuscript identifier) contains the information required to identify the manuscript being described. [10.4. The Manuscript Identifier]
  element msIdentifier {
    ((mishnahw_placeName?,
      mishnahw_region?,
      mishnahw_settlement?,
      mishnahw_repository?,
      mishnahw_idno?),
     empty*)
    >> sch:pattern [
         id =
           "digital_mishnah_witness-msIdentifier-msId_minimal-constraint-25"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:msIdentifier"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "not(parent::tei:msPart) and       (local-name(*[1])='idno' or       local-name(*[1])='altIdentifier' or       normalize-space(.)='')"
             "An msIdentifier must contain either a repository or location of some type, or a manuscript name"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_repository =
  
  ## contains the name of a repository within which manuscripts are stored, possibly forming part of an institution. [10.4. The Manuscript Identifier]
  element repository {
    mishnahw_macro.xtext,
    mishnahw_att.global.attributes,
    mishnahw_att.naming.attributes,
    empty
  }
mishnahw_msContents =
  
  ## (manuscript contents) describes the intellectual content of a manuscript or manuscript part, either as a series of paragraphs or as a series of structured manuscript items. [10.6. Intellectual Content]
  element msContents {
    (mishnahw_model.pLike+
     | (mishnahw_textLang?, mishnahw_titlePage?, (mishnahw_msItem)*)),
    mishnahw_att.global.attributes,
    mishnahw_att.msExcerpt.attributes,
    
    ## identifies the text types or classifications applicable to this object by pointing to other elements or resources defining the classification concerned. 
    attribute class {
      list { xsd:anyURI+ }
    }?,
    empty
  }
mishnahw_msItem =
  
  ## (manuscript item) describes an individual work or item within the intellectual content of a manuscript or manuscript part. [10.6.1. The msItem and msItemStruct Elements]
  element msItem {
    ((mishnahw_locus | mishnahw_locusGrp)*,
     (mishnahw_model.pLike+
      | (mishnahw_model.titlepagePart
         | mishnahw_model.msItemPart
         | mishnahw_model.global)+)),
    mishnahw_att.global.attributes,
    mishnahw_att.msExcerpt.attributes,
    
    ## identifies the text types or classifications applicable to this item by pointing to other elements or resources defining the classification concerned. 
    attribute class {
      list { xsd:anyURI+ }
    }?,
    empty
  }
mishnahw_physDesc =
  
  ## (physical description) contains a full physical description of a manuscript or manuscript part, optionally subdivided using more specialized elements from the model.physDescPart class. [10.7. Physical Description]
  element physDesc {
    (mishnahw_model.pLike*, mishnahw_objectDesc?, mishnahw_handDesc?),
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_objectDesc =
  
  ## contains a description of the physical components making up the object which is being described. [10.7.1. Object Description]
  element objectDesc {
    (mishnahw_model.pLike+
     | (mishnahw_supportDesc?, mishnahw_layoutDesc?)),
    mishnahw_att.global.attributes,
    
    ## a short project-specific name identifying the physical form of the carrier, for example as a codex, roll, fragment, partial leaf, cutting etc.
    attribute form {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_supportDesc =
  
  ## (support description) groups elements describing the physical support for the written part of a manuscript. [10.7.1. Object Description]
  element supportDesc {
    (mishnahw_model.pLike+ | (mishnahw_support?, mishnahw_extent?)),
    mishnahw_att.global.attributes,
    
    ## a short project-defined name for the material composing the majority of the support
    ## Suggested values include: 1] paper; 2] parch(parchment) ; 3] mixed
    attribute material {
      
      ##
      "paper"
      | 
        ## (parchment) 
        "parch"
      | 
        ##
        "mixed"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
mishnahw_support =
  
  ## contains a description of the materials etc. which make up the physical support for the written part of a manuscript. [10.7.1. Object Description]
  element support {
    mishnahw_macro.specialPara, mishnahw_att.global.attributes, empty
  }
mishnahw_layoutDesc =
  
  ## (layout description) collects the set of layout descriptions applicable to a manuscript. [10.7.2. Writing, Decoration, and Other Notations]
  element layoutDesc {
    (mishnahw_model.pLike+ | mishnahw_layout+),
    mishnahw_att.global.attributes,
    empty
  }
mishnahw_layout =
  
  ## describes how text is laid out on the page, including information about any ruling, pricking, or other evidence of page-preparation techniques. [10.7.2. Writing, Decoration, and Other Notations]
  element layout {
    mishnahw_macro.specialPara,
    mishnahw_att.global.attributes,
    
    ## specifies the number of columns per page
    attribute columns {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    
    ## specifies the number of ruled lines per column
    attribute ruledLines {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    
    ## specifies the number of written lines per column
    attribute writtenLines {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    empty
  }
mishnahw_handDesc =
  
  ## (description of hands) contains a description of all the different kinds of writing used in a manuscript. [10.7.2. Writing, Decoration, and Other Notations]
  element handDesc {
    (mishnahw_model.pLike+ | mishnahw_handNote+),
    mishnahw_att.global.attributes,
    
    ## specifies the number of distinct hands identified within the manuscript
    attribute hands { xsd:nonNegativeInteger }?,
    empty
  }
mishnahw_att.datable.custom.attributes =
  mishnahw_att.datable.custom.attribute.when-custom,
  mishnahw_att.datable.custom.attribute.notBefore-custom,
  mishnahw_att.datable.custom.attribute.notAfter-custom,
  mishnahw_att.datable.custom.attribute.from-custom,
  mishnahw_att.datable.custom.attribute.to-custom,
  mishnahw_att.datable.custom.attribute.datingPoint,
  mishnahw_att.datable.custom.attribute.datingMethod
mishnahw_att.datable.custom.attribute.when-custom =
  
  ## supplies the value of a date or time in some custom standard form.
  attribute when-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
mishnahw_att.datable.custom.attribute.notBefore-custom =
  
  ## specifies the earliest possible date for the event in some custom standard form.
  attribute notBefore-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
mishnahw_att.datable.custom.attribute.notAfter-custom =
  
  ## specifies the latest possible date for the event in some custom standard form.
  attribute notAfter-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
mishnahw_att.datable.custom.attribute.from-custom =
  
  ## indicates the starting point of the period in some custom standard form.
  attribute from-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
mishnahw_att.datable.custom.attribute.to-custom =
  
  ## indicates the ending point of the period in some custom standard form.
  attribute to-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
mishnahw_att.datable.custom.attribute.datingPoint =
  
  ## supplies a pointer to some location defining a named point in time with reference to which the datable item is understood to have occurred
  attribute datingPoint { xsd:anyURI }?
mishnahw_att.datable.custom.attribute.datingMethod =
  
  ## supplies a pointer to a calendar element or other means of interpreting the values of the custom dating attributes.
  attribute datingMethod { xsd:anyURI }?
mishnahw_model.persNamePart = notAllowed
mishnahw_model.persNamePart_alternation = notAllowed
mishnahw_model.persNamePart_sequence = empty
mishnahw_model.persNamePart_sequenceOptional = empty
mishnahw_model.persNamePart_sequenceOptionalRepeatable = empty
mishnahw_model.persNamePart_sequenceRepeatable = notAllowed
mishnahw_att.datable.iso.attributes =
  mishnahw_att.datable.iso.attribute.when-iso,
  mishnahw_att.datable.iso.attribute.notBefore-iso,
  mishnahw_att.datable.iso.attribute.notAfter-iso,
  mishnahw_att.datable.iso.attribute.from-iso,
  mishnahw_att.datable.iso.attribute.to-iso
mishnahw_att.datable.iso.attribute.when-iso =
  
  ## supplies the value of a date or time in a standard form.
  attribute when-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
mishnahw_att.datable.iso.attribute.notBefore-iso =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
mishnahw_att.datable.iso.attribute.notAfter-iso =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
mishnahw_att.datable.iso.attribute.from-iso =
  
  ## indicates the starting point of the period in standard form.
  attribute from-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
mishnahw_att.datable.iso.attribute.to-iso =
  
  ## indicates the ending point of the period in standard form.
  attribute to-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
mishnahw_orgName =
  
  ## (organization name) contains an organizational name. [13.2.2. Organizational Names]
  element orgName {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.datable.attributes,
    mishnahw_att.editLike.attributes,
    mishnahw_att.personal.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_placeName =
  
  ## contains an absolute or relative place name. [13.2.3. Place Names]
  element placeName {
    mishnahw_macro.phraseSeq,
    mishnahw_att.datable.attributes,
    mishnahw_att.editLike.attributes,
    mishnahw_att.global.attributes,
    mishnahw_att.personal.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_region =
  
  ## contains the name of an administrative unit such as a state, province, or county, larger than a settlement, but smaller than a country. [13.2.3. Place Names]
  element region {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.naming.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.datable.attributes,
    empty
  }
mishnahw_settlement =
  
  ## contains the name of a settlement such as a city, town, or village identified as a single geo-political or administrative unit. [13.2.3. Place Names]
  element settlement {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.naming.attributes,
    mishnahw_att.typed.attributes,
    mishnahw_att.datable.attributes,
    empty
  }
mishnahw_persName =
  
  ## (personal name) contains a proper noun or proper-noun phrase referring to a person, possibly including one or more of the person's forenames, surnames, honorifics, added names, etc. [13.2.1. Personal Names]
  element persName {
    mishnahw_macro.phraseSeq,
    mishnahw_att.global.attributes,
    mishnahw_att.datable.attributes,
    mishnahw_att.editLike.attributes,
    mishnahw_att.personal.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_pc =
  
  ## (punctuation character) contains a character or string of characters regarded as constituting a single punctuation mark. [17.1. Linguistic Segment Categories]
  element pc {
    (text
     | mishnahw_model.gLike
     | mishnahw_c
     | mishnahw_model.pPart.edit)*,
    mishnahw_att.global.attributes,
    mishnahw_att.segLike.attributes,
    mishnahw_att.typed.attributes,
    
    ## indicates the extent to which this punctuation mark conventionally separates words or phrases
    attribute force {
      
      ## the punctuation mark is a word separator
      "strong"
      | 
        ## the punctuation mark is not a word separator
        "weak"
      | 
        ## the punctuation mark may or may not be a word separator
        "inter"
    }?,
    
    ## provides a name for the kind of unit delimited by this punctuation mark.
    attribute unit {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## indicates whether this punctuation mark precedes or follows the unit it delimits.
    attribute pre { xsd:boolean }?,
    empty
  }
mishnahw_g =
  
  ## (character or glyph) represents a glyph, or a non-standard character. [5. Characters, Glyphs, and Writing Modes]
  element g {
    text,
    mishnahw_att.global.attributes,
    mishnahw_att.typed.attributes,
    
    ## points to a description of the character or glyph intended.
    attribute ref { xsd:anyURI }?,
    empty
  }
mishnahw_c =
  
  ## (character) represents a character. [17.1. Linguistic Segment Categories]
  element c {
    mishnahw_macro.xtext,
    mishnahw_att.global.attributes,
    mishnahw_att.segLike.attributes,
    mishnahw_att.typed.attributes,
    empty
  }
mishnahw_w =
  
  ## (word) represents a grammatical (not necessarily orthographic) word. [17.1. Linguistic Segment Categories]
  element w {
    (text
     | mishnahw_model.gLike
     | mishnahw_seg
     | mishnahw_w
     | mishnahw_c
     | mishnahw_pc
     | mishnahw_model.global
     | mishnahw_model.lPart
     | mishnahw_model.hiLike
     | mishnahw_model.pPart.edit)*,
    mishnahw_att.global.attributes,
    mishnahw_att.segLike.attributes,
    mishnahw_att.typed.attributes,
    
    ## provides a lemma for the word, such as an uninflected dictionary entry form.
    attribute lemma { xsd:string }?,
    
    ## provides a pointer to a definition of the lemma for the word, for example in an online lexicon.
    attribute lemmaRef { xsd:anyURI }?,
    empty
  }
mishnahw_additional =
  
  ## groups additional information, combining bibliographic information about a manuscript, or surrogate copies of it with curatorial or administrative information. [10.9. Additional Information]
  element additional {
    mishnahw_listBibl?, mishnahw_att.global.attributes, empty
  }
mishnahw_include =
  
  ## The W3C XInclude element
  element xi:include {
    mishnahw_fallback?,
    
    ## pointer to the resource being included
    attribute href { mishnahw_data.pointer }?,
    
    ##
    [ a:defaultValue = "xml" ]
    attribute parse {
      
      ##
      "xml"
      | 
        ##
        "text"
    }?,
    
    ##
    attribute xpointer { text }?,
    
    ##
    attribute encoding { text }?,
    
    ##
    attribute accept { text }?,
    
    ##
    attribute accept-charset { text }?,
    
    ##
    attribute accept-language { text }?,
    empty
  }
mishnahw_fallback =
  
  ## Wrapper for fallback elements if an XInclude fails
  element xi:fallback { (text)+ }
start = mishnahw_TEI
